[{"F:\\Code\\personal\\print\\client\\src\\index.js":"1","F:\\Code\\personal\\print\\client\\src\\App.js":"2","F:\\Code\\personal\\print\\client\\src\\reportWebVitals.js":"3","F:\\Code\\personal\\print\\client\\src\\routes.js":"4","F:\\Code\\personal\\print\\client\\src\\components\\Navbar.js":"5","F:\\Code\\personal\\print\\client\\src\\components\\Footer.js":"6","F:\\Code\\personal\\print\\client\\src\\components\\dialog.form.js":"7","F:\\Code\\personal\\print\\client\\src\\pages\\main.js":"8","F:\\Code\\personal\\print\\client\\src\\pages\\productList.js":"9","F:\\Code\\personal\\print\\client\\src\\pages\\productAdd.js":"10","F:\\Code\\personal\\print\\client\\src\\pages\\t-shirts.js":"11","F:\\Code\\personal\\print\\client\\src\\pages\\cups.js":"12","F:\\Code\\personal\\print\\client\\src\\pages\\order.js":"13","F:\\Code\\personal\\print\\client\\src\\pages\\orderList.js":"14","F:\\Code\\personal\\print\\client\\src\\api.js":"15","F:\\Code\\personal\\print\\client\\src\\pages\\About.jsx":"16","F:\\Code\\personal\\print\\client\\src\\pages\\PaymentAndDeliver.jsx":"17","F:\\Code\\personal\\print\\client\\src\\store\\index.js":"18","F:\\Code\\personal\\print\\client\\src\\store\\cartReducer.js":"19"},{"size":309,"mtime":1634383125500,"results":"20","hashOfConfig":"21"},{"size":503,"mtime":1633970041732,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1633970041741,"results":"23","hashOfConfig":"21"},{"size":1078,"mtime":1634383135090,"results":"24","hashOfConfig":"21"},{"size":2694,"mtime":1634383150830,"results":"25","hashOfConfig":"21"},{"size":935,"mtime":1634383142558,"results":"26","hashOfConfig":"21"},{"size":6625,"mtime":1634383123242,"results":"27","hashOfConfig":"21"},{"size":4617,"mtime":1633970041737,"results":"28","hashOfConfig":"21"},{"size":4072,"mtime":1633970041740,"results":"29","hashOfConfig":"21"},{"size":1450,"mtime":1633970041739,"results":"30","hashOfConfig":"21"},{"size":2990,"mtime":1634383094766,"results":"31","hashOfConfig":"21"},{"size":2905,"mtime":1634383102597,"results":"32","hashOfConfig":"21"},{"size":8083,"mtime":1634383183901,"results":"33","hashOfConfig":"21"},{"size":4987,"mtime":1633970041739,"results":"34","hashOfConfig":"21"},{"size":1061,"mtime":1633970041735,"results":"35","hashOfConfig":"21"},{"size":3919,"mtime":1634156519199,"results":"36","hashOfConfig":"21"},{"size":2127,"mtime":1634156512073,"results":"37","hashOfConfig":"21"},{"size":219,"mtime":1634383130894,"results":"38","hashOfConfig":"21"},{"size":604,"mtime":1634383133391,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h3csun",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Code\\personal\\print\\client\\src\\index.js",[],"F:\\Code\\personal\\print\\client\\src\\App.js",[],["81","82"],"F:\\Code\\personal\\print\\client\\src\\reportWebVitals.js",[],"F:\\Code\\personal\\print\\client\\src\\routes.js",[],"F:\\Code\\personal\\print\\client\\src\\components\\Navbar.js",[],"F:\\Code\\personal\\print\\client\\src\\components\\Footer.js",[],"F:\\Code\\personal\\print\\client\\src\\components\\dialog.form.js",["83","84","85","86","87","88"],"F:\\Code\\personal\\print\\client\\src\\pages\\main.js",[],"F:\\Code\\personal\\print\\client\\src\\pages\\productList.js",["89"],"import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'type', headerName: 'type', width: 150 },\r\n    { field: 'name', headerName: 'name', width: 150 },\r\n    { field: 'picture', headerName: 'picture', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n];\r\n\r\nexport function ProductList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n\r\n    const changeProduct = async () => {\r\n        await api.getProductById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n    // TODO: update products\r\n    const EditProduct = async () => {\r\n        await api.updateProductById(edit._id, edit);\r\n        load();\r\n    }\r\n\r\n    const handleInputChange = async (event) => {\r\n        const { name, value } = event.target;\r\n        setEdit({\r\n            ...edit,\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    const DeleteProduct = async () => {\r\n        if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n            await api.deleteProductById(selection);\r\n            load();\r\n        }\r\n    }\r\n\r\n    const AddProduct = () => {\r\n        window.location.href = `/product/new`;\r\n    }\r\n\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllProducts().then(products => {\r\n            products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            rows = [];\r\n            await api.getAllProducts().then(products => {\r\n                products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n                setProducts(products.data);\r\n            });\r\n        }\r\n        load();\r\n    }, []);\r\n    return (\r\n        <div style={{ height: 700, width: '100%', display: 'flex', backgroundColor: 'white' }}>\r\n            <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.selectionModel);\r\n                }} selectionModel={selection} />\r\n            <div style={{ width: '30%' }}>\r\n                <ButtonGroup>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={AddProduct}>Add Data</Button>\r\n                </ButtonGroup>\r\n                <Container style={{ width: '200px' }}>\r\n                    <form onSubmit={EditProduct} method=\"PUT\">\r\n                        <TextField onChange={handleInputChange} label=\"_id\" type=\"text\" name=\"_id\" id=\"_id\" value={edit._id || ''} disabled={true} />\r\n                        <TextField onChange={handleInputChange} label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} />\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </div >\r\n    );\r\n}","F:\\Code\\personal\\print\\client\\src\\pages\\productAdd.js",[],"F:\\Code\\personal\\print\\client\\src\\pages\\t-shirts.js",[],"F:\\Code\\personal\\print\\client\\src\\pages\\cups.js",[],"F:\\Code\\personal\\print\\client\\src\\pages\\order.js",["90","91","92","93","94"],"F:\\Code\\personal\\print\\client\\src\\pages\\orderList.js",["95"],"import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'date', headerName: 'date', width: 150 },\r\n    { field: 'address', headerName: 'address', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n    { field: 'products', headerName: 'products', width: 150 },\r\n    { field: 'clientName', headerName: 'clientName', width: 150 },\r\n    { field: 'clientSurname', headerName: 'clientSurname', width: 150 },\r\n    { field: 'paid', headerName: 'paid', width: 150 },\r\n    { field: 'sent', headerName: 'sent', width: 150 },\r\n    { field: 'email', headerName: 'email', width: 150 },\r\n    { field: 'city', headerName: 'city', width: 150 },\r\n];\r\n\r\nexport function OrderList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n\r\n    const changeProduct = async () => {\r\n        await api.getOrderById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n    // TODO: update orders\r\n    const EditProduct = async () => {\r\n        await api.updateOrderById(edit._id, edit);\r\n        load();\r\n    }\r\n\r\n    const handleInputChange = async (event) => {\r\n        const { name, value } = event.target;\r\n        setEdit({\r\n            ...edit,\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    const DeleteProduct = async () => {\r\n        if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n            await api.deleteOrderById(selection);\r\n            load();\r\n        }\r\n    }\r\n\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllOrders().then(products => {\r\n            products.data.map(product => (rows.push({\r\n                id: product._id,\r\n                date: product.date,\r\n                address: product.address,\r\n                price: product.price,\r\n                products: product.products,\r\n                clientName: product.name,\r\n                clientSurname: product.surname,\r\n                paid: product.paid,\r\n                sent: product.sent,\r\n                email: product.email,\r\n                city: product.city,\r\n            })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            rows = [];\r\n            await api.getAllOrders().then(products => {\r\n                products.data.map(product => (rows.push({\r\n                    id: product._id,\r\n                    date: product.date,\r\n                    address: product.address,\r\n                    price: product.price,\r\n                    products: product.products,\r\n                    clientName: product.name,\r\n                    clientSurname: product.surname,\r\n                    paid: product.paid,\r\n                    sent: product.sent,\r\n                    email: product.email,\r\n                    city: product.city,\r\n                })));\r\n                setProducts(products.data);\r\n            });\r\n        }\r\n        load();\r\n    }, []);\r\n    return (\r\n        <div style={{ height: 700, width: '100%', display: 'flex', backgroundColor: 'white' }}>\r\n            <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.selectionModel);\r\n                }} selectionModel={selection} />\r\n            <div style={{ width: '30%' }}>\r\n                <ButtonGroup>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                </ButtonGroup>\r\n                <Container style={{ width: '200px' }}>\r\n                    <form onSubmit={EditProduct} method=\"PUT\">\r\n                        <TextField onChange={handleInputChange} label=\"_id\" type=\"text\" name=\"_id\" id=\"_id\" value={edit._id || ''} disabled={true} />\r\n                        <TextField onChange={handleInputChange} label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} />\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </div >\r\n    );\r\n}","F:\\Code\\personal\\print\\client\\src\\api.js",[],"F:\\Code\\personal\\print\\client\\src\\pages\\About.jsx",[],"F:\\Code\\personal\\print\\client\\src\\pages\\PaymentAndDeliver.jsx",[],"F:\\Code\\personal\\print\\client\\src\\store\\index.js",[],"F:\\Code\\personal\\print\\client\\src\\store\\cartReducer.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":10,"column":8,"nodeType":"102","messageId":"103","endLine":10,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":12,"column":10,"nodeType":"102","messageId":"103","endLine":12,"endColumn":23},{"ruleId":"100","severity":1,"message":"106","line":16,"column":10,"nodeType":"102","messageId":"103","endLine":16,"endColumn":16},{"ruleId":"100","severity":1,"message":"107","line":18,"column":10,"nodeType":"102","messageId":"103","endLine":18,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":24,"column":6,"nodeType":"110","endLine":24,"endColumn":12,"suggestions":"111"},{"ruleId":"100","severity":1,"message":"112","line":17,"column":12,"nodeType":"102","messageId":"103","endLine":17,"endColumn":20},{"ruleId":"100","severity":1,"message":"113","line":34,"column":10,"nodeType":"102","messageId":"103","endLine":34,"endColumn":25},{"ruleId":"100","severity":1,"message":"114","line":34,"column":27,"nodeType":"102","messageId":"103","endLine":34,"endColumn":45},{"ruleId":"100","severity":1,"message":"106","line":35,"column":10,"nodeType":"102","messageId":"103","endLine":35,"endColumn":16},{"ruleId":"100","severity":1,"message":"115","line":38,"column":7,"nodeType":"102","messageId":"103","endLine":38,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":110,"column":6,"nodeType":"110","endLine":110,"endColumn":8,"suggestions":"116"},{"ruleId":"100","severity":1,"message":"112","line":23,"column":12,"nodeType":"102","messageId":"103","endLine":23,"endColumn":20},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'ShoppingBasketIcon' is defined but never used.","'addCartAction' is defined but never used.","'update' is assigned a value but never used.","'count' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCart'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'products' is assigned a value but never used.","'shippingAddress' is assigned a value but never used.","'setShippingAddress' is assigned a value but never used.","'addresses' is assigned a value but never used.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [loadCart, open]",{"range":"125","text":"126"},"Update the dependencies array to be: [loadCart]",{"range":"127","text":"128"},[1002,1008],"[loadCart, open]",[3171,3173],"[loadCart]"]