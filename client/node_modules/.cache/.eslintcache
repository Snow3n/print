[{"E:\\proj\\Landing_sis\\src\\front\\client\\src\\index.js":"1","E:\\proj\\Landing_sis\\src\\front\\client\\src\\App.js":"2","E:\\proj\\Landing_sis\\src\\front\\client\\src\\reportWebVitals.js":"3","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\main.js":"4","E:\\proj\\Landing_sis\\src\\front\\client\\src\\components\\Navbar.js":"5","E:\\proj\\Landing_sis\\src\\front\\client\\src\\routes.js":"6","E:\\proj\\Landing_sis\\src\\front\\client\\src\\components\\Footer.js":"7","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\productList.js":"8","E:\\proj\\Landing_sis\\src\\front\\client\\src\\api.js":"9","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\cups.js":"10","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\productAdd.js":"11","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\t-shirts.js":"12","E:\\proj\\Landing_sis\\src\\front\\client\\src\\components\\dialog.form.js":"13","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\order.js":"14","E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\orderList.js":"15"},{"size":507,"mtime":1619419995846,"results":"16","hashOfConfig":"17"},{"size":481,"mtime":1616602102997,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":4617,"mtime":1619422036350,"results":"20","hashOfConfig":"17"},{"size":1847,"mtime":1619353050584,"results":"21","hashOfConfig":"17"},{"size":989,"mtime":1619353059060,"results":"22","hashOfConfig":"17"},{"size":1042,"mtime":1617615581491,"results":"23","hashOfConfig":"17"},{"size":4072,"mtime":1619353081934,"results":"24","hashOfConfig":"17"},{"size":1061,"mtime":1619352787064,"results":"25","hashOfConfig":"17"},{"size":2525,"mtime":1619353115962,"results":"26","hashOfConfig":"17"},{"size":1450,"mtime":1619353155365,"results":"27","hashOfConfig":"17"},{"size":1500,"mtime":1619353122630,"results":"28","hashOfConfig":"17"},{"size":5333,"mtime":1619420522386,"results":"29","hashOfConfig":"17"},{"size":10056,"mtime":1619421974036,"results":"30","hashOfConfig":"17"},{"size":4987,"mtime":1619353108278,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dzfdpi",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},"E:\\proj\\Landing_sis\\src\\front\\client\\src\\index.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\App.js",[],["65","66"],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\reportWebVitals.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\main.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\components\\Navbar.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\routes.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\components\\Footer.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\productList.js",["67"],"import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'type', headerName: 'type', width: 150 },\r\n    { field: 'name', headerName: 'name', width: 150 },\r\n    { field: 'picture', headerName: 'picture', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n];\r\n\r\nexport function ProductList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n\r\n    const changeProduct = async () => {\r\n        await api.getProductById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n    // TODO: update products\r\n    const EditProduct = async () => {\r\n        await api.updateProductById(edit._id, edit);\r\n        load();\r\n    }\r\n\r\n    const handleInputChange = async (event) => {\r\n        const { name, value } = event.target;\r\n        setEdit({\r\n            ...edit,\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    const DeleteProduct = async () => {\r\n        if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n            await api.deleteProductById(selection);\r\n            load();\r\n        }\r\n    }\r\n\r\n    const AddProduct = () => {\r\n        window.location.href = `/product/new`;\r\n    }\r\n\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllProducts().then(products => {\r\n            products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            rows = [];\r\n            await api.getAllProducts().then(products => {\r\n                products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n                setProducts(products.data);\r\n            });\r\n        }\r\n        load();\r\n    }, []);\r\n    return (\r\n        <div style={{ height: 700, width: '100%', display: 'flex', backgroundColor: 'white' }}>\r\n            <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.selectionModel);\r\n                }} selectionModel={selection} />\r\n            <div style={{ width: '30%' }}>\r\n                <ButtonGroup>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={AddProduct}>Add Data</Button>\r\n                </ButtonGroup>\r\n                <Container style={{ width: '200px' }}>\r\n                    <form onSubmit={EditProduct} method=\"PUT\">\r\n                        <TextField onChange={handleInputChange} label=\"_id\" type=\"text\" name=\"_id\" id=\"_id\" value={edit._id || ''} disabled={true} />\r\n                        <TextField onChange={handleInputChange} label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} />\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </div >\r\n    );\r\n}","E:\\proj\\Landing_sis\\src\\front\\client\\src\\api.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\cups.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\productAdd.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\t-shirts.js",[],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\components\\dialog.form.js",["68","69"],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\order.js",["70","71"],"E:\\proj\\Landing_sis\\src\\front\\client\\src\\pages\\orderList.js",["72"],"import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'date', headerName: 'date', width: 150 },\r\n    { field: 'address', headerName: 'address', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n    { field: 'products', headerName: 'products', width: 150 },\r\n    { field: 'clientName', headerName: 'clientName', width: 150 },\r\n    { field: 'clientSurname', headerName: 'clientSurname', width: 150 },\r\n    { field: 'paid', headerName: 'paid', width: 150 },\r\n    { field: 'sent', headerName: 'sent', width: 150 },\r\n    { field: 'email', headerName: 'email', width: 150 },\r\n    { field: 'city', headerName: 'city', width: 150 },\r\n];\r\n\r\nexport function OrderList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n\r\n    const changeProduct = async () => {\r\n        await api.getOrderById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n    // TODO: update orders\r\n    const EditProduct = async () => {\r\n        await api.updateOrderById(edit._id, edit);\r\n        load();\r\n    }\r\n\r\n    const handleInputChange = async (event) => {\r\n        const { name, value } = event.target;\r\n        setEdit({\r\n            ...edit,\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    const DeleteProduct = async () => {\r\n        if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n            await api.deleteOrderById(selection);\r\n            load();\r\n        }\r\n    }\r\n\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllOrders().then(products => {\r\n            products.data.map(product => (rows.push({\r\n                id: product._id,\r\n                date: product.date,\r\n                address: product.address,\r\n                price: product.price,\r\n                products: product.products,\r\n                clientName: product.name,\r\n                clientSurname: product.surname,\r\n                paid: product.paid,\r\n                sent: product.sent,\r\n                email: product.email,\r\n                city: product.city,\r\n            })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            rows = [];\r\n            await api.getAllOrders().then(products => {\r\n                products.data.map(product => (rows.push({\r\n                    id: product._id,\r\n                    date: product.date,\r\n                    address: product.address,\r\n                    price: product.price,\r\n                    products: product.products,\r\n                    clientName: product.name,\r\n                    clientSurname: product.surname,\r\n                    paid: product.paid,\r\n                    sent: product.sent,\r\n                    email: product.email,\r\n                    city: product.city,\r\n                })));\r\n                setProducts(products.data);\r\n            });\r\n        }\r\n        load();\r\n    }, []);\r\n    return (\r\n        <div style={{ height: 700, width: '100%', display: 'flex', backgroundColor: 'white' }}>\r\n            <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.selectionModel);\r\n                }} selectionModel={selection} />\r\n            <div style={{ width: '30%' }}>\r\n                <ButtonGroup>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                </ButtonGroup>\r\n                <Container style={{ width: '200px' }}>\r\n                    <form onSubmit={EditProduct} method=\"PUT\">\r\n                        <TextField onChange={handleInputChange} label=\"_id\" type=\"text\" name=\"_id\" id=\"_id\" value={edit._id || ''} disabled={true} />\r\n                        <TextField onChange={handleInputChange} label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} />\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </div >\r\n    );\r\n}",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":17,"column":12,"nodeType":"79","messageId":"80","endLine":17,"endColumn":20},{"ruleId":"77","severity":1,"message":"81","line":13,"column":10,"nodeType":"79","messageId":"80","endLine":13,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":18,"column":6,"nodeType":"84","endLine":18,"endColumn":8,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"81","line":29,"column":12,"nodeType":"79","messageId":"80","endLine":29,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":112,"column":8,"nodeType":"84","endLine":112,"endColumn":10,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"78","line":23,"column":12,"nodeType":"79","messageId":"80","endLine":23,"endColumn":20},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","'update' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCart'. Either include it or remove the dependency array.","ArrayExpression",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},"Update the dependencies array to be: [loadCart]",{"range":"94","text":"95"},{"range":"96","text":"95"},[674,676],"[loadCart]",[3746,3748]]