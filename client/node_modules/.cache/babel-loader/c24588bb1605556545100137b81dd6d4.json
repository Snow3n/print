{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom';\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { DataGrid } from '@material-ui/data-grid'; // import ReactTable from 'react-table'\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\n\nimport api from '../api'; // import styled from 'styled-components'\n// import styled from 'styled-components'\n// import { useTable } from 'react-table'\n\nimport { withRouter } from 'react-router-dom'; // import 'react-table/react-table.css'\n// const Wrapper = styled.div`\n//     padding: 0 40px 40px 40px;\n// `\n// const Update = styled.div`\n//     color: #ef9b0f;\n//     cursor: pointer;\n// `\n// const Delete = styled.div`\n//     color: #ff0000;\n//     cursor: pointer;\n// `\n// class UpdateProduct extends React.Component {\n//     updateUser = event => {\n//         event.preventDefault()\n//         window.location.href = `/products/update/${this.props.id}`\n//     }\n//     render() {\n//         return <Update onClick={this.updateUser}>Update</Update>\n//     }\n// }\n// class DeleteProduct extends React.Component {\n//     deleteUser = event => {\n//         event.preventDefault();\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\n//             api.deleteProductById(this.props.id);\n//             window.location.reload();\n//         }\n//     }\n//     render() {\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getAllProducts().then(products => {\n        // console.log(products.data);\n        this.setState({\n          products: products.data // isLoading: false,\n\n        });\n      });\n    };\n\n    this.state = {\n      products: []\n    }; // this.remove = this.remove.bind(this);\n  }\n\n  render() {\n    try {\n      let start = async () => {\n        let products = await api.getAllProducts(); // api.getAllProducts().then(products => {\n        //     console.log(products.data);\n        //     this.setState({\n        //         products: products.data,\n        //         // isLoading: false,\n        //     })\n        // })\n        // const { products } = this.state;\n\n        console.log('TCL: ProductList -> render -> products', products); // return products;\n        // let products = start();\n        // const columns = [\n        //     { id: 'name', label: 'Name', minWidth: 170 },\n        //     { id: 'type', label: 'Type', minWidth: 100 },\n        //     {\n        //         id: 'picture',\n        //         label: 'Picture',\n        //         minWidth: 170,\n        //         align: 'right',\n        //         format: (value) => value.toLocaleString('en-US'),\n        //     },\n        //     {\n        //         id: 'price',\n        //         label: 'Price',\n        //         minWidth: 170,\n        //         align: 'right',\n        //         format: (value) => value.toLocaleString('en-US'),\n        //     },\n        // ];\n\n        function createData(product) {\n          // const id = Math.random();\n          return [product.name, product.type, product.picture, product.price];\n        } // useEffect(() => {\n        //     var apiurl = \"http://localhost:4000/api/products\";\n        //     axios\n        //       .get(apiurl)\n        //       .then((response) => response.data)\n        //       .then((data) => {\n        //         setIsLoaded(true);\n        //         setRowData(data);\n        //       });\n        //   }, []);\n\n\n        let rows = [];\n        console.log(products.data);\n\n        for (let i = 0; i < products.data.length; i++) {\n          rows.push(createData(products.data[i]));\n        }\n\n        return rows;\n      }; // let rows = start();\n\n\n      const columns = [{\n        id: 'name',\n        label: 'Name',\n        minWidth: 170\n      }, {\n        id: 'type',\n        label: 'Type',\n        minWidth: 100\n      }, {\n        id: 'picture',\n        label: 'Picture',\n        minWidth: 170,\n        align: 'right',\n        format: value => value.toLocaleString('en-US')\n      }, {\n        id: 'price',\n        label: 'Price',\n        minWidth: 170,\n        align: 'right',\n        format: value => value.toLocaleString('en-US')\n      }];\n    } catch (error) {\n      console.log(error);\n    } // rows.push(products.data.map(product => { console.log(product); createData(product.name, product.type, product.picture, product.price) }))\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        id: Math.random(),\n        rows: start(),\n        columns: columns,\n        pageSize: 10,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c = withRouter(ProductList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","DataGrid","api","withRouter","ProductList","Component","constructor","props","componentDidMount","getAllProducts","then","products","setState","data","state","render","start","console","log","createData","product","name","type","picture","price","rows","i","length","push","columns","id","label","minWidth","align","format","value","toLocaleString","error","height","width","Math","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n// import ReactTable from 'react-table'\r\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\r\nimport api from '../api'\r\n\r\n// import styled from 'styled-components'\r\n\r\n// import styled from 'styled-components'\r\n// import { useTable } from 'react-table'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import 'react-table/react-table.css'\r\n\r\n// const Wrapper = styled.div`\r\n//     padding: 0 40px 40px 40px;\r\n// `\r\n\r\n// const Update = styled.div`\r\n//     color: #ef9b0f;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// const Delete = styled.div`\r\n//     color: #ff0000;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// class UpdateProduct extends React.Component {\r\n//     updateUser = event => {\r\n//         event.preventDefault()\r\n\r\n//         window.location.href = `/products/update/${this.props.id}`\r\n//     }\r\n\r\n//     render() {\r\n//         return <Update onClick={this.updateUser}>Update</Update>\r\n//     }\r\n// }\r\n\r\n// class DeleteProduct extends React.Component {\r\n//     deleteUser = event => {\r\n//         event.preventDefault();\r\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\r\n//             api.deleteProductById(this.props.id);\r\n//             window.location.reload();\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n//     }\r\n// }\r\n\r\nexport class ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { products: [] };\r\n        // this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await api.getAllProducts().then(products => {\r\n            // console.log(products.data);\r\n            this.setState({\r\n                products: products.data,\r\n                // isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        try {\r\n            let start = async () => {\r\n                let products = await api.getAllProducts();\r\n                // api.getAllProducts().then(products => {\r\n                //     console.log(products.data);\r\n                //     this.setState({\r\n                //         products: products.data,\r\n                //         // isLoading: false,\r\n                //     })\r\n                // })\r\n                // const { products } = this.state;\r\n                console.log('TCL: ProductList -> render -> products', products);\r\n                // return products;\r\n                // let products = start();\r\n                // const columns = [\r\n                //     { id: 'name', label: 'Name', minWidth: 170 },\r\n                //     { id: 'type', label: 'Type', minWidth: 100 },\r\n                //     {\r\n                //         id: 'picture',\r\n                //         label: 'Picture',\r\n                //         minWidth: 170,\r\n                //         align: 'right',\r\n                //         format: (value) => value.toLocaleString('en-US'),\r\n                //     },\r\n                //     {\r\n                //         id: 'price',\r\n                //         label: 'Price',\r\n                //         minWidth: 170,\r\n                //         align: 'right',\r\n                //         format: (value) => value.toLocaleString('en-US'),\r\n                //     },\r\n                // ];\r\n                function createData(product) {\r\n                    // const id = Math.random();\r\n                    return [product.name, product.type, product.picture, product.price];\r\n                }\r\n                // useEffect(() => {\r\n                //     var apiurl = \"http://localhost:4000/api/products\";\r\n                //     axios\r\n                //       .get(apiurl)\r\n                //       .then((response) => response.data)\r\n                //       .then((data) => {\r\n                //         setIsLoaded(true);\r\n                //         setRowData(data);\r\n                //       });\r\n                //   }, []);\r\n                let rows = [\r\n\r\n                ];\r\n                console.log(products.data);\r\n                for (let i = 0; i < products.data.length; i++) {\r\n                    rows.push(createData(products.data[i]));\r\n                }\r\n                return rows;\r\n            }\r\n            // let rows = start();\r\n            const columns = [\r\n                { id: 'name', label: 'Name', minWidth: 170 },\r\n                { id: 'type', label: 'Type', minWidth: 100 },\r\n                {\r\n                    id: 'picture',\r\n                    label: 'Picture',\r\n                    minWidth: 170,\r\n                    align: 'right',\r\n                    format: (value) => value.toLocaleString('en-US'),\r\n                },\r\n                {\r\n                    id: 'price',\r\n                    label: 'Price',\r\n                    minWidth: 170,\r\n                    align: 'right',\r\n                    format: (value) => value.toLocaleString('en-US'),\r\n                },\r\n            ];\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        // rows.push(products.data.map(product => { console.log(product); createData(product.name, product.type, product.picture, product.price) }))\r\n\r\n\r\n        return (\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid id={Math.random()} rows={start()} columns={columns} pageSize={10} checkboxSelection />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductList);"]},"metadata":{},"sourceType":"module"}