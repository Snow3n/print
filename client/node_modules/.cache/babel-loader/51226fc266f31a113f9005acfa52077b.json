{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\";\nimport { React, useState } from 'react'; // import { Link } from 'react-router-dom';\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid'; // import ReactTable from 'react-table'\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\n\nimport api from '../api'; // import styled from 'styled-components'\n// import styled from 'styled-components'\n// import { useTable } from 'react-table'\n\nimport { withRouter } from 'react-router-dom'; // import 'react-table/react-table.css'\n// const Wrapper = styled.div`\n//     padding: 0 40px 40px 40px;\n// `\n// const Update = styled.div`\n//     color: #ef9b0f;\n//     cursor: pointer;\n// `\n// const Delete = styled.div`\n//     color: #ff0000;\n//     cursor: pointer;\n// `\n// class UpdateProduct extends React.Component {\n//     updateUser = event => {\n//         event.preventDefault()\n//         window.location.href = `/products/update/${this.props.id}`\n//     }\n//     render() {\n//         return <Update onClick={this.updateUser}>Update</Update>\n//     }\n// }\n// class DeleteProduct extends React.Component {\n//     deleteUser = event => {\n//         event.preventDefault();\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\n//             api.deleteProductById(this.props.id);\n//             window.location.reload();\n//         }\n//     }\n//     render() {\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getAllProducts().then(products => {\n        // console.log(products.data);\n        this.setState({\n          products: products.data // isLoading: false,\n\n        });\n      });\n    };\n\n    this.state = {\n      products: []\n    };\n  }\n\n  render() {\n    const {\n      products\n    } = this.state; // console.log('1' + products);\n\n    const rows = [];\n    setTimeout(() => {\n      try {\n        // if (products.length !== Number) {\n        //     console.log('No data loaded...');\n        //     return 'No data loaded...';\n        // }\n        // else {\n        console.log('TCL: ProductList -> render -> products', products);\n\n        function createData(product) {\n          return [product._id, product.name, product.type, product.picture, product.price];\n        } // { id: 1, col1: 'Hello', col2: 'World', col3: 'picture', col4: 'price' },\n        // { id: 2, col1: 'XGrid', col2: 'is Awesome', col3: 'picture', col4: 'price' },\n        // { id: 3, col1: 'Material-UI', col2: 'is Amazing', col3: 'picture', col4: 'price' },\n        // console.log(products);\n\n\n        for (let i = 0; i < products.length; i++) {\n          rows.push({\n            id: products[i]._id,\n            type: products[i].type,\n            name: products[i].name,\n            picture: products[i].picture,\n            price: products[i].price\n          });\n        }\n      } // }\n      catch (error) {\n        console.log(error);\n      }\n    }, 1000);\n    const columns = [{\n      field: 'type',\n      headerName: 'type',\n      width: 150\n    }, {\n      field: 'name',\n      headerName: 'name',\n      width: 150\n    }, {\n      field: 'picture',\n      headerName: 'picture',\n      width: 150\n    }, {\n      field: 'price',\n      headerName: 'price',\n      width: 150\n    } // { id: 'name', label: 'Name', minWidth: 170 },\n    // { id: 'type', label: 'Type', minWidth: 100 },\n    // {\n    //     id: 'picture',\n    //     label: 'Picture',\n    //     minWidth: 170,\n    //     align: 'right',\n    //     format: (value) => value.toLocaleString('en-US'),\n    // },\n    // {\n    //     id: 'price',\n    //     label: 'Price',\n    //     minWidth: 170,\n    //     align: 'right',\n    //     format: (value) => value.toLocaleString('en-US'),\n    // },\n    ];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        id: Math.random(),\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c = withRouter(ProductList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","useState","DataGrid","GridRowsProp","GridColDef","api","withRouter","ProductList","Component","constructor","props","componentDidMount","getAllProducts","then","products","setState","data","state","render","rows","setTimeout","console","log","createData","product","_id","name","type","picture","price","i","length","push","id","error","columns","field","headerName","width","height","Math","random"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid';\r\n// import ReactTable from 'react-table'\r\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\r\nimport api from '../api'\r\n\r\n// import styled from 'styled-components'\r\n\r\n// import styled from 'styled-components'\r\n// import { useTable } from 'react-table'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import 'react-table/react-table.css'\r\n\r\n// const Wrapper = styled.div`\r\n//     padding: 0 40px 40px 40px;\r\n// `\r\n\r\n// const Update = styled.div`\r\n//     color: #ef9b0f;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// const Delete = styled.div`\r\n//     color: #ff0000;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// class UpdateProduct extends React.Component {\r\n//     updateUser = event => {\r\n//         event.preventDefault()\r\n\r\n//         window.location.href = `/products/update/${this.props.id}`\r\n//     }\r\n\r\n//     render() {\r\n//         return <Update onClick={this.updateUser}>Update</Update>\r\n//     }\r\n// }\r\n\r\n// class DeleteProduct extends React.Component {\r\n//     deleteUser = event => {\r\n//         event.preventDefault();\r\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\r\n//             api.deleteProductById(this.props.id);\r\n//             window.location.reload();\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n//     }\r\n// }\r\n\r\nexport class ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { products: [] };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await api.getAllProducts().then(products => {\r\n            // console.log(products.data);\r\n            this.setState({\r\n                products: products.data,\r\n                // isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { products } = this.state;\r\n        // console.log('1' + products);\r\n        const rows = [];\r\n        setTimeout(() => {\r\n            try {\r\n                // if (products.length !== Number) {\r\n                //     console.log('No data loaded...');\r\n                //     return 'No data loaded...';\r\n                // }\r\n                // else {\r\n\r\n                    console.log('TCL: ProductList -> render -> products', products);\r\n                    function createData(product) {\r\n                        return [product._id, product.name, product.type, product.picture, product.price];\r\n                    }\r\n                    // { id: 1, col1: 'Hello', col2: 'World', col3: 'picture', col4: 'price' },\r\n                    // { id: 2, col1: 'XGrid', col2: 'is Awesome', col3: 'picture', col4: 'price' },\r\n                    // { id: 3, col1: 'Material-UI', col2: 'is Amazing', col3: 'picture', col4: 'price' },\r\n                    // console.log(products);\r\n                    for (let i = 0; i < products.length; i++) {\r\n                        rows.push({ id: products[i]._id, type: products[i].type, name: products[i].name, picture: products[i].picture, price: products[i].price });\r\n                    }\r\n                }\r\n            // }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }, 1000);\r\n        const columns = [\r\n            { field: 'type', headerName: 'type', width: 150 },\r\n            { field: 'name', headerName: 'name', width: 150 },\r\n            { field: 'picture', headerName: 'picture', width: 150 },\r\n            { field: 'price', headerName: 'price', width: 150 },\r\n            // { id: 'name', label: 'Name', minWidth: 170 },\r\n            // { id: 'type', label: 'Type', minWidth: 100 },\r\n            // {\r\n            //     id: 'picture',\r\n            //     label: 'Picture',\r\n            //     minWidth: 170,\r\n            //     align: 'right',\r\n            //     format: (value) => value.toLocaleString('en-US'),\r\n            // },\r\n            // {\r\n            //     id: 'price',\r\n            //     label: 'Price',\r\n            //     minWidth: 170,\r\n            //     align: 'right',\r\n            //     format: (value) => value.toLocaleString('en-US'),\r\n            // },\r\n        ];\r\n\r\n        return (\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid id={Math.random()} rows={rows} columns={columns} pageSize={10} checkboxSelection />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductList);"]},"metadata":{},"sourceType":"module"}