{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\";\nimport React, { useState } from 'react'; // import { Link } from 'react-router-dom';\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { DataGrid } from '@material-ui/data-grid'; // import ReactTable from 'react-table'\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\n\nimport api from '../api'; // import styled from 'styled-components'\n// import styled from 'styled-components'\n// import { useTable } from 'react-table'\n\nimport { withRouter } from 'react-router-dom'; // import 'react-table/react-table.css'\n// const Wrapper = styled.div`\n//     padding: 0 40px 40px 40px;\n// `\n// const Update = styled.div`\n//     color: #ef9b0f;\n//     cursor: pointer;\n// `\n// const Delete = styled.div`\n//     color: #ff0000;\n//     cursor: pointer;\n// `\n// class UpdateProduct extends React.Component {\n//     updateUser = event => {\n//         event.preventDefault()\n//         window.location.href = `/products/update/${this.props.id}`\n//     }\n//     render() {\n//         return <Update onClick={this.updateUser}>Update</Update>\n//     }\n// }\n// class DeleteProduct extends React.Component {\n//     deleteUser = event => {\n//         event.preventDefault();\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\n//             api.deleteProductById(this.props.id);\n//             window.location.reload();\n//         }\n//     }\n//     render() {\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getAllProducts().then(products => {\n        // console.log(products.data);\n        this.setState({\n          products: products.data // isLoading: false,\n\n        });\n        this.load(); // const rows = [];\n      });\n    };\n\n    this.state = {\n      products: []\n    };\n    this.load = this.load.bind(this);\n    this.columns = [];\n    this.rows = [];\n  }\n\n  async load() {\n    const {\n      products\n    } = this.state; // console.log('1' + products);\n    // const rows = [];\n    // setTimeout(() => {\n\n    try {\n      // if (products.length !== Number) {\n      //     console.log('No data loaded...');\n      //     return 'No data loaded...';\n      // }\n      // else {\n      console.log('TCL: ProductList -> render -> products', products); // console.log(products);\n\n      for (let i = 0; i < products.length; i++) {\n        this.rows.push({\n          id: products[i]._id,\n          type: products[i].type,\n          name: products[i].name,\n          picture: products[i].picture,\n          price: products[i].price\n        });\n      }\n    } // }\n    catch (error) {\n      console.log(error);\n    } // }, 1000);\n\n\n    const rows = [{\n      id: 1,\n      col1: 'Hello',\n      col2: 'World',\n      col3: 'picture',\n      col4: 'price'\n    }, {\n      id: 2,\n      col1: 'XGrid',\n      col2: 'is Awesome',\n      col3: 'picture',\n      col4: 'price'\n    }, {\n      id: 3,\n      col1: 'Material-UI',\n      col2: 'is Amazing',\n      col3: 'picture',\n      col4: 'price'\n    }];\n    const columns = [{\n      field: 'type',\n      headerName: 'type',\n      width: 150\n    }, {\n      field: 'name',\n      headerName: 'name',\n      width: 150\n    }, {\n      field: 'picture',\n      headerName: 'picture',\n      width: 150\n    }, {\n      field: 'price',\n      headerName: 'price',\n      width: 150\n    } // { id: 'name', label: 'Name', minWidth: 170 },\n    // { id: 'type', label: 'Type', minWidth: 100 },\n    // {\n    //     id: 'picture',\n    //     label: 'Picture',\n    //     minWidth: 170,\n    //     align: 'right',\n    //     format: (value) => value.toLocaleString('en-US'),\n    // },\n    // {\n    //     id: 'price',\n    //     label: 'Price',\n    //     minWidth: 170,\n    //     align: 'right',\n    //     format: (value) => value.toLocaleString('en-US'),\n    // },\n    ];\n    this.columns = columns;\n    this.rows = rows;\n  }\n\n  render() {\n    this.load(); // const {rows, columns} = this.load();\n    // const { products } = this.state;\n    // // console.log('1' + products);\n    // const rows = [];\n    // setTimeout(() => {\n    //     try {\n    //         // if (products.length !== Number) {\n    //         //     console.log('No data loaded...');\n    //         //     return 'No data loaded...';\n    //         // }\n    //         // else {\n    //         console.log('TCL: ProductList -> render -> products', products);\n    //         // { id: 1, col1: 'Hello', col2: 'World', col3: 'picture', col4: 'price' },\n    //         // { id: 2, col1: 'XGrid', col2: 'is Awesome', col3: 'picture', col4: 'price' },\n    //         // { id: 3, col1: 'Material-UI', col2: 'is Amazing', col3: 'picture', col4: 'price' },\n    //         // console.log(products);\n    //         for (let i = 0; i < products.length; i++) {\n    //             rows.push({ id: products[i]._id, type: products[i].type, name: products[i].name, picture: products[i].picture, price: products[i].price });\n    //         }\n    //     }\n    //     // }\n    //     catch (error) {\n    //         console.log(error);\n    //     }\n    // }, 1000);\n    // const columns = [\n    //     { field: 'type', headerName: 'type', width: 150 },\n    //     { field: 'name', headerName: 'name', width: 150 },\n    //     { field: 'picture', headerName: 'picture', width: 150 },\n    //     { field: 'price', headerName: 'price', width: 150 },\n    //     // { id: 'name', label: 'Name', minWidth: 170 },\n    //     // { id: 'type', label: 'Type', minWidth: 100 },\n    //     // {\n    //     //     id: 'picture',\n    //     //     label: 'Picture',\n    //     //     minWidth: 170,\n    //     //     align: 'right',\n    //     //     format: (value) => value.toLocaleString('en-US'),\n    //     // },\n    //     // {\n    //     //     id: 'price',\n    //     //     label: 'Price',\n    //     //     minWidth: 170,\n    //     //     align: 'right',\n    //     //     format: (value) => value.toLocaleString('en-US'),\n    //     // },\n    // ];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        id: Math.random(),\n        rows: this.rows,\n        columns: this.columns,\n        pageSize: 10,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c = withRouter(ProductList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","useState","DataGrid","api","withRouter","ProductList","Component","constructor","props","componentDidMount","getAllProducts","then","products","setState","data","load","state","bind","columns","rows","console","log","i","length","push","id","_id","type","name","picture","price","error","col1","col2","col3","col4","field","headerName","width","render","height","Math","random"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n// import ReactTable from 'react-table'\r\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\r\nimport api from '../api'\r\n\r\n// import styled from 'styled-components'\r\n\r\n// import styled from 'styled-components'\r\n// import { useTable } from 'react-table'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import 'react-table/react-table.css'\r\n\r\n// const Wrapper = styled.div`\r\n//     padding: 0 40px 40px 40px;\r\n// `\r\n\r\n// const Update = styled.div`\r\n//     color: #ef9b0f;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// const Delete = styled.div`\r\n//     color: #ff0000;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// class UpdateProduct extends React.Component {\r\n//     updateUser = event => {\r\n//         event.preventDefault()\r\n\r\n//         window.location.href = `/products/update/${this.props.id}`\r\n//     }\r\n\r\n//     render() {\r\n//         return <Update onClick={this.updateUser}>Update</Update>\r\n//     }\r\n// }\r\n\r\n// class DeleteProduct extends React.Component {\r\n//     deleteUser = event => {\r\n//         event.preventDefault();\r\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\r\n//             api.deleteProductById(this.props.id);\r\n//             window.location.reload();\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n//     }\r\n// }\r\n\r\nexport class ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { products: [] };\r\n        this.load = this.load.bind(this);\r\n        this.columns = [];\r\n        this.rows = [];\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await api.getAllProducts().then(products => {\r\n            // console.log(products.data);\r\n            this.setState({\r\n                products: products.data,\r\n                // isLoading: false,\r\n            })\r\n            this.load();\r\n            // const rows = [];\r\n        })\r\n    }\r\n\r\n    async load() {\r\n        const { products } = this.state;\r\n        // console.log('1' + products);\r\n        // const rows = [];\r\n        // setTimeout(() => {\r\n            try {\r\n                // if (products.length !== Number) {\r\n                //     console.log('No data loaded...');\r\n                //     return 'No data loaded...';\r\n                // }\r\n                // else {\r\n\r\n                console.log('TCL: ProductList -> render -> products', products);\r\n                \r\n                // console.log(products);\r\n                for (let i = 0; i < products.length; i++) {\r\n                    this.rows.push({ id: products[i]._id, type: products[i].type, name: products[i].name, picture: products[i].picture, price: products[i].price });\r\n                }\r\n            }\r\n            // }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        // }, 1000);\r\n        const rows = [\r\n            { id: 1, col1: 'Hello', col2: 'World', col3: 'picture', col4: 'price' },\r\n            { id: 2, col1: 'XGrid', col2: 'is Awesome', col3: 'picture', col4: 'price' },\r\n            { id: 3, col1: 'Material-UI', col2: 'is Amazing', col3: 'picture', col4: 'price' },\r\n        ]\r\n        const columns = [\r\n            { field: 'type', headerName: 'type', width: 150 },\r\n            { field: 'name', headerName: 'name', width: 150 },\r\n            { field: 'picture', headerName: 'picture', width: 150 },\r\n            { field: 'price', headerName: 'price', width: 150 },\r\n            // { id: 'name', label: 'Name', minWidth: 170 },\r\n            // { id: 'type', label: 'Type', minWidth: 100 },\r\n            // {\r\n            //     id: 'picture',\r\n            //     label: 'Picture',\r\n            //     minWidth: 170,\r\n            //     align: 'right',\r\n            //     format: (value) => value.toLocaleString('en-US'),\r\n            // },\r\n            // {\r\n            //     id: 'price',\r\n            //     label: 'Price',\r\n            //     minWidth: 170,\r\n            //     align: 'right',\r\n            //     format: (value) => value.toLocaleString('en-US'),\r\n            // },\r\n        ];\r\n        this.columns = columns;\r\n        this.rows = rows;\r\n    }\r\n\r\n    render() {\r\n        this.load();\r\n        // const {rows, columns} = this.load();\r\n        // const { products } = this.state;\r\n        // // console.log('1' + products);\r\n        // const rows = [];\r\n        // setTimeout(() => {\r\n        //     try {\r\n        //         // if (products.length !== Number) {\r\n        //         //     console.log('No data loaded...');\r\n        //         //     return 'No data loaded...';\r\n        //         // }\r\n        //         // else {\r\n\r\n        //         console.log('TCL: ProductList -> render -> products', products);\r\n        //         // { id: 1, col1: 'Hello', col2: 'World', col3: 'picture', col4: 'price' },\r\n        //         // { id: 2, col1: 'XGrid', col2: 'is Awesome', col3: 'picture', col4: 'price' },\r\n        //         // { id: 3, col1: 'Material-UI', col2: 'is Amazing', col3: 'picture', col4: 'price' },\r\n        //         // console.log(products);\r\n        //         for (let i = 0; i < products.length; i++) {\r\n        //             rows.push({ id: products[i]._id, type: products[i].type, name: products[i].name, picture: products[i].picture, price: products[i].price });\r\n        //         }\r\n        //     }\r\n        //     // }\r\n        //     catch (error) {\r\n        //         console.log(error);\r\n        //     }\r\n        // }, 1000);\r\n        // const columns = [\r\n        //     { field: 'type', headerName: 'type', width: 150 },\r\n        //     { field: 'name', headerName: 'name', width: 150 },\r\n        //     { field: 'picture', headerName: 'picture', width: 150 },\r\n        //     { field: 'price', headerName: 'price', width: 150 },\r\n        //     // { id: 'name', label: 'Name', minWidth: 170 },\r\n        //     // { id: 'type', label: 'Type', minWidth: 100 },\r\n        //     // {\r\n        //     //     id: 'picture',\r\n        //     //     label: 'Picture',\r\n        //     //     minWidth: 170,\r\n        //     //     align: 'right',\r\n        //     //     format: (value) => value.toLocaleString('en-US'),\r\n        //     // },\r\n        //     // {\r\n        //     //     id: 'price',\r\n        //     //     label: 'Price',\r\n        //     //     minWidth: 170,\r\n        //     //     align: 'right',\r\n        //     //     format: (value) => value.toLocaleString('en-US'),\r\n        //     // },\r\n        // ];\r\n\r\n        return (\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid id={Math.random()} rows={this.rows} columns={this.columns} pageSize={10} checkboxSelection />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductList);"]},"metadata":{},"sourceType":"module"}