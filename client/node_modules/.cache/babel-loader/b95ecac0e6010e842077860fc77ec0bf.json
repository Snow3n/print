{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\nimport api from '../api';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet rows = [];\nconst columns = [{\n  field: 'type',\n  headerName: 'type',\n  width: 150\n}, {\n  field: 'name',\n  headerName: 'name',\n  width: 150\n}, {\n  field: 'picture',\n  headerName: 'picture',\n  width: 150\n}, {\n  field: 'price',\n  headerName: 'price',\n  width: 150\n}];\nconst useStyles = makeStyles({\n  root: {\n    //   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    //   borderRadius: 3,\n    //   border: 0,\n    color: 'white' //   height: 48,\n    //   padding: '0 30px',\n    //   boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n\n  } // label: {\n  //   textTransform: 'capitalize',\n  // },\n\n});\nexport function ProductList(props) {\n  _s();\n\n  const [selection, setSelection] = useState([]);\n  const [products, setProducts] = useState([0]);\n  const [edit, setEdit] = useState([]);\n  const classes = useStyles();\n\n  const changeProduct = async () => {\n    await api.getProductById(selection).then(prod => {\n      setEdit(prod.data);\n    });\n  };\n\n  const EditProduct = async () => {\n    console.log(selection);\n    await api.updateProductById(selection);\n    load();\n  }; // edit();\n  // }\n  // )\n\n\n  const handleInputChange = async event => {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n    setEdit({ ...edit,\n      [name]: value\n    }); // console.log(formValues);\n    // await api.insertOrder(formValues).then(\n    //   localStorage.removeItem('podarok-print-en')\n    // );\n  };\n\n  const DeleteProduct = async () => {\n    if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\n      await api.deleteProductById(selection);\n      load();\n    }\n  };\n\n  const AddProduct = () => {\n    window.location.href = `/product/new`;\n  };\n\n  async function load() {\n    rows = [];\n    await api.getAllProducts().then(products => {\n      products.data.map(product => rows.push({\n        id: product._id,\n        type: product.type,\n        name: product.name,\n        picture: product.picture,\n        price: product.price\n      }));\n      setProducts(products.data);\n    });\n  }\n\n  useEffect(() => {\n    async function load() {\n      rows = [];\n      await api.getAllProducts().then(products => {\n        products.data.map(product => rows.push({\n          id: product._id,\n          type: product.type,\n          name: product.name,\n          picture: product.picture,\n          price: product.price\n        }));\n        setProducts(products.data);\n      });\n    }\n\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '100%',\n      display: 'flex',\n      color: \"white\",\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      id: rows._id,\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setSelection(newSelection.selectionModel);\n      },\n      selectionModel: selection,\n      classes: {\n        root: classes.root\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: changeProduct,\n          children: \"Edit Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: DeleteProduct,\n          children: \"Delete Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: AddProduct,\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          width: '200px',\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: EditProduct,\n          method: \"PUT\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"type\",\n            type: \"text\",\n            name: \"type\",\n            id: \"type\",\n            value: edit.type || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"name\",\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            value: edit.name || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"picture\",\n            type: \"text\",\n            name: \"picture\",\n            id: \"picture\",\n            value: edit.picture || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"price\",\n            type: \"text\",\n            name: \"price\",\n            id: \"price\",\n            value: edit.price || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductList, \"/pulfMLjneT3EDqEmJk2CYSR428=\", false, function () {\n  return [useStyles];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","useState","useEffect","DataGrid","Button","ButtonGroup","Container","TextField","api","makeStyles","rows","columns","field","headerName","width","useStyles","root","color","ProductList","props","selection","setSelection","products","setProducts","edit","setEdit","classes","changeProduct","getProductById","then","prod","data","EditProduct","console","log","updateProductById","load","handleInputChange","event","preventDefault","name","value","target","DeleteProduct","window","confirm","deleteProductById","AddProduct","location","href","getAllProducts","map","product","push","id","_id","type","picture","price","height","display","backgroundColor","newSelection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'type', headerName: 'type', width: 150 },\r\n    { field: 'name', headerName: 'name', width: 150 },\r\n    { field: 'picture', headerName: 'picture', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    //   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    //   borderRadius: 3,\r\n    //   border: 0,\r\n      color: 'white',\r\n    //   height: 48,\r\n    //   padding: '0 30px',\r\n    //   boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    // label: {\r\n    //   textTransform: 'capitalize',\r\n    // },\r\n  });\r\n\r\nexport function ProductList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    const changeProduct = async () => {\r\n        await api.getProductById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n\r\n    const EditProduct = async () => {\r\n        console.log(selection)\r\n        await api.updateProductById(selection);\r\n        load();\r\n    }\r\n    // edit();\r\n    // }\r\n    // )\r\n\r\n    const handleInputChange = async (event) => {\r\n        event.preventDefault();\r\n        const {name, value} = event.target;\r\n        setEdit({\r\n            ...edit,\r\n            [name]: value,\r\n        })\r\n        // console.log(formValues);\r\n        // await api.insertOrder(formValues).then(\r\n        //   localStorage.removeItem('podarok-print-en')\r\n        // );\r\n      };\r\n\r\n    const DeleteProduct = async () => {\r\n        if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n            await api.deleteProductById(selection);\r\n            load();\r\n        }\r\n    }\r\n\r\n    const AddProduct = () => {\r\n        window.location.href = `/product/new`;\r\n    }\r\n\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllProducts().then(products => {\r\n            products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            rows = [];\r\n            await api.getAllProducts().then(products => {\r\n                products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n                setProducts(products.data);\r\n            });\r\n        }\r\n        load();\r\n    }, []);\r\n    return (\r\n        <div style={{ height: 700, width: '100%', display: 'flex', color: \"white\", backgroundColor: 'white' }}>\r\n            <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.selectionModel);\r\n                }} selectionModel={selection} classes={{root: classes.root}} />\r\n            <div style={{ width: '30%', color: 'white' }}>\r\n                <ButtonGroup>\r\n                    {/* <Button variant=\"contained\" onClick={load}>Load Data</Button> */}\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={AddProduct}>Add Data</Button>\r\n                </ButtonGroup>\r\n                <Container style={{ width: '200px', color: 'white'}}>\r\n                    <form onSubmit={EditProduct} method=\"PUT\">\r\n                        <TextField onChange={handleInputChange} label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''}/>\r\n                        {/* <input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" hidden />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">Upload</Button>\r\n                        </label> */}\r\n                        <TextField onChange={handleInputChange} label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} />\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </div >\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}