{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\orderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet rows = [];\nconst columns = [{\n  field: 'date',\n  headerName: 'date',\n  width: 150\n}, {\n  field: 'address',\n  headerName: 'address',\n  width: 150\n}, {\n  field: 'price',\n  headerName: 'price',\n  width: 150\n}, {\n  field: 'products',\n  headerName: 'products',\n  width: 150\n}, {\n  field: 'clientName',\n  headerName: 'clientName',\n  width: 150\n}, {\n  field: 'clientSurname',\n  headerName: 'clientSurname',\n  width: 150\n}, {\n  field: 'paid',\n  headerName: 'paid',\n  width: 150\n}, {\n  field: 'sent',\n  headerName: 'sent',\n  width: 150\n}, {\n  field: 'email',\n  headerName: 'email',\n  width: 150\n}, {\n  field: 'city',\n  headerName: 'city',\n  width: 150\n}];\nexport function OrderList(props) {\n  _s();\n\n  const [selection, setSelection] = useState([]);\n  const [products, setProducts] = useState([0]);\n  const [edit, setEdit] = useState([]);\n\n  const changeProduct = async () => {\n    await api.getOrderById(selection).then(prod => {\n      setEdit(prod.data);\n    });\n  }; // TODO: update products\n\n\n  const EditProduct = async () => {\n    // console.log(selection._id, selection);\n    await api.updateOrderById(edit._id, edit);\n    load();\n  };\n\n  const handleInputChange = async event => {\n    // event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target;\n    setEdit({ ...edit,\n      [name]: value\n    });\n  };\n\n  const DeleteProduct = async () => {\n    if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\n      await api.deleteOrderById(selection);\n      load();\n    }\n  };\n\n  const AddProduct = () => {\n    window.location.href = `/product/new`;\n  };\n\n  async function load() {\n    rows = [];\n    await api.getAllOrders().then(products => {\n      products.data.map(product => rows.push({\n        id: product._id,\n        date: product.date,\n        address: product.address,\n        price: product.price,\n        products: product.products,\n        clientName: product.name,\n        clientSurname: product.surname,\n        paid: product.paid,\n        sent: product.sent,\n        email: product.email,\n        city: product.city\n      }));\n      setProducts(products.data);\n    });\n  }\n\n  useEffect(() => {\n    async function load() {\n      rows = [];\n      await api.getAllOrders().then(products => {\n        products.data.map(product => rows.push({\n          id: product._id,\n          date: product.date,\n          address: product.address,\n          price: product.price,\n          products: product.products,\n          clientName: product.name,\n          clientSurname: product.surname,\n          paid: product.paid,\n          sent: product.sent,\n          email: product.email,\n          city: product.city\n        }));\n        setProducts(products.data);\n      });\n    }\n\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '100%',\n      display: 'flex',\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      id: rows._id,\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setSelection(newSelection.selectionModel);\n      },\n      selectionModel: selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: changeProduct,\n          children: \"Edit Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: DeleteProduct,\n          children: \"Delete Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: AddProduct,\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          width: '200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: EditProduct,\n          method: \"PUT\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"_id\",\n            type: \"text\",\n            name: \"_id\",\n            id: \"_id\",\n            value: edit._id || '',\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"type\",\n            type: \"text\",\n            name: \"type\",\n            id: \"type\",\n            value: edit.type || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"name\",\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            value: edit.name || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"picture\",\n            type: \"text\",\n            name: \"picture\",\n            id: \"picture\",\n            value: edit.picture || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: handleInputChange,\n            label: \"price\",\n            type: \"text\",\n            name: \"price\",\n            id: \"price\",\n            value: edit.price || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderList, \"OJIdkj0hrRCk/yMsTJ4YgIWkqvQ=\");\n\n_c = OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/orderList.js"],"names":["React","useState","useEffect","DataGrid","Button","ButtonGroup","Container","TextField","api","rows","columns","field","headerName","width","OrderList","props","selection","setSelection","products","setProducts","edit","setEdit","changeProduct","getOrderById","then","prod","data","EditProduct","updateOrderById","_id","load","handleInputChange","event","name","value","target","DeleteProduct","window","confirm","deleteOrderById","AddProduct","location","href","getAllOrders","map","product","push","id","date","address","price","clientName","clientSurname","surname","paid","sent","email","city","height","display","backgroundColor","newSelection","selectionModel","type","picture"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'date', headerName: 'date', width: 150 },\r\n    { field: 'address', headerName: 'address', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n    { field: 'products', headerName: 'products', width: 150 },\r\n    { field: 'clientName', headerName: 'clientName', width: 150 },\r\n    { field: 'clientSurname', headerName: 'clientSurname', width: 150 },\r\n    { field: 'paid', headerName: 'paid', width: 150 },\r\n    { field: 'sent', headerName: 'sent', width: 150 },\r\n    { field: 'email', headerName: 'email', width: 150 },\r\n    { field: 'city', headerName: 'city', width: 150 },\r\n];\r\n\r\nexport function OrderList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n\r\n    const changeProduct = async () => {\r\n        await api.getOrderById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n    // TODO: update products\r\n    const EditProduct = async () => {\r\n        // console.log(selection._id, selection);\r\n        await api.updateOrderById(edit._id, edit);\r\n        load();\r\n    }\r\n\r\n    const handleInputChange = async (event) => {\r\n        // event.preventDefault();\r\n        const { name, value } = event.target;\r\n        setEdit({\r\n            ...edit,\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    const DeleteProduct = async () => {\r\n        if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n            await api.deleteOrderById(selection);\r\n            load();\r\n        }\r\n    }\r\n\r\n    const AddProduct = () => {\r\n        window.location.href = `/product/new`;\r\n    }\r\n\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllOrders().then(products => {\r\n            products.data.map(product => (rows.push({ id: product._id,\r\n                date: product.date,\r\n                address: product.address,\r\n                price: product.price,\r\n                products: product.products,\r\n                clientName: product.name,\r\n                clientSurname: product.surname,\r\n                paid: product.paid,\r\n                sent: product.sent,\r\n                email: product.email,\r\n                city: product.city, })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            rows = [];\r\n            await api.getAllOrders().then(products => {\r\n                products.data.map(product => (rows.push({ id: product._id,\r\n                    date: product.date,\r\n                    address: product.address,\r\n                    price: product.price,\r\n                    products: product.products,\r\n                    clientName: product.name,\r\n                    clientSurname: product.surname,\r\n                    paid: product.paid,\r\n                    sent: product.sent,\r\n                    email: product.email,\r\n                    city: product.city, })));\r\n                setProducts(products.data);\r\n            });\r\n        }\r\n        load();\r\n    }, []);\r\n    return (\r\n        <div style={{ height: 700, width: '100%', display: 'flex', backgroundColor: 'white' }}>\r\n            <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.selectionModel);\r\n                }} selectionModel={selection}/>\r\n            <div style={{ width: '30%' }}>\r\n                <ButtonGroup>\r\n                    {/* <Button variant=\"contained\" onClick={load}>Load Data</Button> */}\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={AddProduct}>Add Data</Button>\r\n                </ButtonGroup>\r\n                <Container style={{ width: '200px' }}>\r\n                    <form onSubmit={EditProduct} method=\"PUT\">\r\n                        <TextField onChange={handleInputChange} label=\"_id\" type=\"text\" name=\"_id\" id=\"_id\" value={edit._id || ''}  disabled={true}/>\r\n                        <TextField onChange={handleInputChange} label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} />\r\n                        <TextField onChange={handleInputChange} label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''} />\r\n                        {/* <input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" hidden />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">Upload</Button>\r\n                        </label> */}\r\n                        <TextField onChange={handleInputChange} label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} />\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </div >\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}