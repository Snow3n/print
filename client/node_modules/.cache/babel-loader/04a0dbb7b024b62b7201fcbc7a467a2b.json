{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet rows = [];\nconst columns = [{\n  field: 'type',\n  headerName: 'type',\n  width: 150\n}, {\n  field: 'name',\n  headerName: 'name',\n  width: 150\n}, {\n  field: 'picture',\n  headerName: 'picture',\n  width: 150\n}, {\n  field: 'price',\n  headerName: 'price',\n  width: 150\n}];\nexport function ProductList(props) {\n  _s();\n\n  const [selection, setSelection] = useState([]);\n  const [products, setProducts] = useState([0]);\n  const [edit, setEdit] = useState([]);\n\n  const changeProduct = async () => {\n    await api.getProductById(selection).then(prod => {\n      setEdit(prod.data);\n    });\n  };\n\n  const EditProduct = async () => {\n    await api.updateProductById(selection); // load();\n  }; // edit();\n  // }\n  // )\n\n\n  const DeleteProduct = async () => {\n    if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\n      await api.deleteProductById(selection); // load();\n    }\n  };\n\n  const AddProduct = () => {\n    window.location.href = `/product/new`;\n  };\n\n  useEffect(() => {\n    async function load() {\n      rows = [];\n      await api.getAllProducts().then(products => {\n        products.data.map(product => rows.push({\n          id: product._id,\n          type: product.type,\n          name: product.name,\n          picture: product.picture,\n          price: product.price\n        }));\n        setProducts(products.data);\n      });\n    }\n\n    load();\n  }, [EditProduct, DeleteProduct]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '100%',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      id: rows._id,\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setSelection(newSelection.selectionModel);\n      },\n      selectionModel: selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: changeProduct,\n          children: \"Edit Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: DeleteProduct,\n          children: \"Delete Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: AddProduct,\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          width: '200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: EditProduct,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"type\",\n            type: \"text\",\n            name: \"type\",\n            id: \"type\",\n            value: edit.type || '',\n            autoComplete: \"type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"name\",\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            value: edit.name || '',\n            autoComplete: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"picture\",\n            type: \"text\",\n            name: \"picture\",\n            id: \"picture\",\n            value: edit.picture || '',\n            autoComplete: \"picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"price\",\n            type: \"text\",\n            name: \"price\",\n            id: \"price\",\n            value: edit.price || 0,\n            autoComplete: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductList, \"OJIdkj0hrRCk/yMsTJ4YgIWkqvQ=\");\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","useState","useEffect","useCallback","DataGrid","Button","ButtonGroup","Container","TextField","api","rows","columns","field","headerName","width","ProductList","props","selection","setSelection","products","setProducts","edit","setEdit","changeProduct","getProductById","then","prod","data","EditProduct","updateProductById","DeleteProduct","window","confirm","deleteProductById","AddProduct","location","href","load","getAllProducts","map","product","push","id","_id","type","name","picture","price","height","display","newSelection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, ButtonGroup, Container, TextField } from '@material-ui/core';\r\nimport api from '../api'\r\n\r\nlet rows = [\r\n]\r\nconst columns = [\r\n    { field: 'type', headerName: 'type', width: 150 },\r\n    { field: 'name', headerName: 'name', width: 150 },\r\n    { field: 'picture', headerName: 'picture', width: 150 },\r\n    { field: 'price', headerName: 'price', width: 150 },\r\n];\r\n\r\nexport function ProductList(props) {\r\n    const [selection, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([0]);\r\n    const [edit, setEdit] = useState([]);\r\n\r\n    const changeProduct = async () => {\r\n        await api.getProductById(selection).then(prod => {\r\n            setEdit(prod.data);\r\n        })\r\n\r\n    }\r\n\r\n    const EditProduct = async () => {\r\n        await api.updateProductById(selection);\r\n        // load();\r\n    }\r\n    // edit();\r\n// }\r\n    // )\r\n\r\nconst DeleteProduct = async () => {\r\n    if (window.confirm(`Do you want to delete the product ${selection} permanently`)) {\r\n        await api.deleteProductById(selection);\r\n        // load();\r\n    }\r\n}\r\n\r\nconst AddProduct = () => {\r\n    window.location.href = `/product/new`;\r\n}\r\n\r\nuseEffect(() => {\r\n    async function load() {\r\n        rows = [];\r\n        await api.getAllProducts().then(products => {\r\n            products.data.map(product => (rows.push({ id: product._id, type: product.type, name: product.name, picture: product.picture, price: product.price })));\r\n            setProducts(products.data);\r\n        });\r\n    }\r\n    load();\r\n}, [EditProduct, DeleteProduct]);\r\nreturn (\r\n    <div style={{ height: 700, width: '100%', display: 'flex' }}>\r\n        <DataGrid id={rows._id} rows={rows} columns={columns} pageSize={10} checkboxSelection\r\n            onSelectionModelChange={(newSelection) => {\r\n                setSelection(newSelection.selectionModel);\r\n            }} selectionModel={selection} />\r\n        <div style={{ width: '30%' }}>\r\n            <ButtonGroup>\r\n                {/* <Button variant=\"contained\" onClick={load}>Load Data</Button> */}\r\n                <Button variant=\"contained\" color=\"primary\" onClick={changeProduct}>Edit Data</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={DeleteProduct}>Delete Data</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={AddProduct}>Add Data</Button>\r\n            </ButtonGroup>\r\n            <Container style={{ width: '200px' }}>\r\n                <form onSubmit={EditProduct} method=\"POST\">\r\n                    <TextField label=\"type\" type=\"text\" name=\"type\" id=\"type\" value={edit.type || ''} autoComplete=\"type\" />\r\n                    <TextField label=\"name\" type=\"text\" name=\"name\" id=\"name\" value={edit.name || ''} autoComplete=\"name\" />\r\n                    <TextField label=\"picture\" type=\"text\" name=\"picture\" id=\"picture\" value={edit.picture || ''} autoComplete=\"picture\" />\r\n                    {/* <input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" hidden />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">Upload</Button>\r\n                        </label> */}\r\n                    <TextField label=\"price\" type=\"text\" name=\"price\" id=\"price\" value={edit.price || 0} autoComplete=\"price\" />\r\n                    <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    </div >\r\n);\r\n}"]},"metadata":{},"sourceType":"module"}