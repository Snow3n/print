{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; // import ReactTable from 'react-table'\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\n\nimport api from '../api'; // import styled from 'styled-components'\n\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { withRouter } from 'react-router-dom'; // import 'react-table/react-table.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\n_c = Update;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n_c2 = Delete;\n\nclass UpdateProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/products/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Update, {\n      onClick: this.updateUser,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass DeleteProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteUser = event => {\n      event.preventDefault();\n\n      if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\n        api.deleteProductById(this.props.id);\n        window.location.reload();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Delete, {\n      onClick: this.deleteUser,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport class ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getAllProducts().then(products => {\n        this.setState({\n          products: products.data.data // isLoading: false,\n\n        });\n      });\n    };\n\n    this.state = {\n      products: []\n    }; // this.remove = this.remove.bind(this);\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    console.log('TCL: ProductList -> render -> products', products);\n    const columns = [{\n      id: 'name',\n      label: 'Name',\n      minWidth: 170\n    }, {\n      id: 'type',\n      label: 'Type',\n      minWidth: 100\n    }, {\n      id: 'picture',\n      label: 'Picture',\n      minWidth: 170,\n      align: 'right',\n      format: value => value.toLocaleString('en-US')\n    }, {\n      id: 'price',\n      label: 'Price',\n      minWidth: 170,\n      align: 'right',\n      format: value => value.toLocaleString('en-US')\n    }];\n\n    function createData(name, type, picture, price) {\n      return {\n        name,\n        type,\n        picture,\n        price\n      };\n    }\n\n    let rows = [];\n    rows.push(products.map(product => {\n      createData(product.name, product.type, product.picture, product.price);\n    })); // let showTable = true\n    // if (!products.length) {\n    //     showTable = false\n    // }\n    // function Table({ columns, data }) {\n    //     // Use the state and functions returned from useTable to build your UI\n    //     const {\n    //       getTableProps,\n    //       getTableBodyProps,\n    //       headerGroups,\n    //       rows,\n    //       prepareRow,\n    //     } = useTable({\n    //       columns,\n    //       data,\n    //     })\n    //     // Render the UI for your table\n    //     return (\n    //       <table {...getTableProps()}>\n    //         <thead>\n    //           {headerGroups.map(headerGroup => (\n    //             <tr {...headerGroup.getHeaderGroupProps()}>\n    //               {headerGroup.headers.map(column => (\n    //                 <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n    //               ))}\n    //             </tr>\n    //           ))}\n    //         </thead>\n    //         <tbody {...getTableBodyProps()}>\n    //           {rows.map((row, i) => {\n    //             prepareRow(row)\n    //             return (\n    //               <tr {...row.getRowProps()}>\n    //                 {row.cells.map(cell => {\n    //                   return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n    //                 })}\n    //               </tr>\n    //             )\n    //           })}\n    //         </tbody>\n    //       </table>\n    //     )\n    //   }\n    // return (\n    //     <div>\n    //         <Wrapper>\n    //             {showTable && (\n    //                 <Table\n    //                     data={products}\n    //                     columns={columns}\n    //                     // loading={isLoading}\n    //                     defaultPageSize={10}\n    //                     showPageSizeOptions={true}\n    //                     minRows={0}\n    //                 />\n    //             )}\n    //         </Wrapper>\n    //     </div>\n    // )\n    // const { products } = this.state;\n    // const productList = products.map(product => {\n    //     return <tr key={product.id}>\n    //         <td style={{ whiteSpace: 'nowrap' }}>{product.type}</td>\n    //         <td>{product.name}</td>\n    //         <td>{product.picture}</td>\n    //         <td>{product.price}</td>\n    //         <td>\n    //             <a href={`/products/ + ${product.id}`}>\n    //                 <button>Edit</button>\n    //             </a>\n    //             <button onClick={() => this.remove(product.id)}>Delete</button>\n    //             {/* <ButtonGroup> */}\n    //                 {/* <Button to={'/products/' + product.id}>Edit</Button> */}\n    //                 {/* <Button onClick={() => this.remove(product.id)}>Delete</Button> */}\n    //             {/* </ButtonGroup> */}\n    //         </td>\n    //     </tr>\n    // });\n\n    const useStyles = makeStyles({\n      root: {\n        width: '100%'\n      },\n      container: {\n        maxHeight: 440\n      }\n    }); // const classes = useStyles();\n\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table\n      /*className={classes.table}*/\n      , {\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Dessert (100g serving)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Fat\\xA0(g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Carbs\\xA0(g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Protein\\xA0(g)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.protein\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this) // <div>\n    //     {/* <Container fluid> */}\n    //         <div>\n    //             <button tag={Link} to=\"/products/new\">Add Product</button>\n    //         </div>\n    //         <h3>Product List</h3>\n    //         <table>\n    //             <thead>\n    //                 <tr>\n    //                     <th width=\"25%\">type</th>\n    //                     <th width=\"25%\">name</th>\n    //                     <th width=\"25%\">picture</th>\n    //                     <th width=\"25%\">price</th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {productList}\n    //             </tbody>\n    //         </table>\n    //     {/* </Container> */}\n    // </div>\n    ;\n  }\n\n}\nexport default _c3 = withRouter(ProductList);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Update\");\n$RefreshReg$(_c2, \"Delete\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","Link","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","api","styled","useTable","withRouter","Wrapper","div","Update","Delete","UpdateProduct","Component","updateUser","event","preventDefault","window","location","href","props","id","render","DeleteProduct","deleteUser","confirm","deleteProductById","reload","ProductList","constructor","componentDidMount","getAllProducts","then","products","setState","data","state","console","log","columns","label","minWidth","align","format","value","toLocaleString","createData","name","type","picture","price","rows","push","map","product","useStyles","root","width","container","maxHeight","row","calories","fat","carbs","protein"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import ReactTable from 'react-table'\r\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\r\nimport api from '../api'\r\n\r\n// import styled from 'styled-components'\r\n\r\nimport styled from 'styled-components'\r\nimport { useTable } from 'react-table'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import 'react-table/react-table.css'\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 0 40px 40px 40px;\r\n`\r\n\r\nconst Update = styled.div`\r\n    color: #ef9b0f;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Delete = styled.div`\r\n    color: #ff0000;\r\n    cursor: pointer;\r\n`\r\n\r\nclass UpdateProduct extends React.Component {\r\n    updateUser = event => {\r\n        event.preventDefault()\r\n\r\n        window.location.href = `/products/update/${this.props.id}`\r\n    }\r\n\r\n    render() {\r\n        return <Update onClick={this.updateUser}>Update</Update>\r\n    }\r\n}\r\n\r\nclass DeleteProduct extends React.Component {\r\n    deleteUser = event => {\r\n        event.preventDefault();\r\n        if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\r\n            api.deleteProductById(this.props.id);\r\n            window.location.reload();\r\n        }\r\n    }\r\n    render() {\r\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n    }\r\n}\r\n\r\nexport class ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { products: [] };\r\n        // this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await api.getAllProducts().then(products => {\r\n            this.setState({\r\n                products: products.data.data,\r\n                // isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { products } = this.state\r\n        console.log('TCL: ProductList -> render -> products', products)\r\n\r\n        const columns = [\r\n            { id: 'name', label: 'Name', minWidth: 170 },\r\n            { id: 'type', label: 'Type', minWidth: 100 },\r\n            {\r\n                id: 'picture',\r\n                label: 'Picture',\r\n                minWidth: 170,\r\n                align: 'right',\r\n                format: (value) => value.toLocaleString('en-US'),\r\n            },\r\n            {\r\n                id: 'price',\r\n                label: 'Price',\r\n                minWidth: 170,\r\n                align: 'right',\r\n                format: (value) => value.toLocaleString('en-US'),\r\n            },\r\n        ];\r\n        function createData(name, type, picture, price) {\r\n            return { name, type, picture, price };\r\n        }\r\n        let rows = [\r\n\r\n        ];\r\n        rows.push(products.map(product => { createData(product.name, product.type, product.picture, product.price) }))\r\n\r\n        // let showTable = true\r\n        // if (!products.length) {\r\n        //     showTable = false\r\n        // }\r\n\r\n\r\n        // function Table({ columns, data }) {\r\n        //     // Use the state and functions returned from useTable to build your UI\r\n        //     const {\r\n        //       getTableProps,\r\n        //       getTableBodyProps,\r\n        //       headerGroups,\r\n        //       rows,\r\n        //       prepareRow,\r\n        //     } = useTable({\r\n        //       columns,\r\n        //       data,\r\n        //     })\r\n\r\n        //     // Render the UI for your table\r\n        //     return (\r\n        //       <table {...getTableProps()}>\r\n        //         <thead>\r\n        //           {headerGroups.map(headerGroup => (\r\n        //             <tr {...headerGroup.getHeaderGroupProps()}>\r\n        //               {headerGroup.headers.map(column => (\r\n        //                 <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n        //               ))}\r\n        //             </tr>\r\n        //           ))}\r\n        //         </thead>\r\n        //         <tbody {...getTableBodyProps()}>\r\n        //           {rows.map((row, i) => {\r\n        //             prepareRow(row)\r\n        //             return (\r\n        //               <tr {...row.getRowProps()}>\r\n        //                 {row.cells.map(cell => {\r\n        //                   return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n        //                 })}\r\n        //               </tr>\r\n        //             )\r\n        //           })}\r\n        //         </tbody>\r\n        //       </table>\r\n        //     )\r\n        //   }\r\n\r\n        // return (\r\n        //     <div>\r\n        //         <Wrapper>\r\n        //             {showTable && (\r\n        //                 <Table\r\n        //                     data={products}\r\n        //                     columns={columns}\r\n        //                     // loading={isLoading}\r\n        //                     defaultPageSize={10}\r\n        //                     showPageSizeOptions={true}\r\n        //                     minRows={0}\r\n        //                 />\r\n        //             )}\r\n        //         </Wrapper>\r\n        //     </div>\r\n        // )\r\n\r\n        // const { products } = this.state;\r\n        // const productList = products.map(product => {\r\n        //     return <tr key={product.id}>\r\n        //         <td style={{ whiteSpace: 'nowrap' }}>{product.type}</td>\r\n        //         <td>{product.name}</td>\r\n        //         <td>{product.picture}</td>\r\n        //         <td>{product.price}</td>\r\n        //         <td>\r\n        //             <a href={`/products/ + ${product.id}`}>\r\n        //                 <button>Edit</button>\r\n        //             </a>\r\n        //             <button onClick={() => this.remove(product.id)}>Delete</button>\r\n        //             {/* <ButtonGroup> */}\r\n        //                 {/* <Button to={'/products/' + product.id}>Edit</Button> */}\r\n        //                 {/* <Button onClick={() => this.remove(product.id)}>Delete</Button> */}\r\n        //             {/* </ButtonGroup> */}\r\n        //         </td>\r\n        //     </tr>\r\n        // });\r\n        const useStyles = makeStyles({\r\n            root: {\r\n                width: '100%',\r\n            },\r\n            container: {\r\n                maxHeight: 440,\r\n            },\r\n        });\r\n        // const classes = useStyles();\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table /*className={classes.table}*/ size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Dessert (100g serving)</TableCell>\r\n                            <TableCell align=\"right\">Calories</TableCell>\r\n                            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                <TableCell align=\"right\">{row.protein}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            // <div>\r\n            //     {/* <Container fluid> */}\r\n            //         <div>\r\n            //             <button tag={Link} to=\"/products/new\">Add Product</button>\r\n            //         </div>\r\n            //         <h3>Product List</h3>\r\n            //         <table>\r\n            //             <thead>\r\n            //                 <tr>\r\n            //                     <th width=\"25%\">type</th>\r\n            //                     <th width=\"25%\">name</th>\r\n            //                     <th width=\"25%\">picture</th>\r\n            //                     <th width=\"25%\">price</th>\r\n            //                 </tr>\r\n            //             </thead>\r\n            //             <tbody>\r\n            //                 {productList}\r\n            //             </tbody>\r\n            //         </table>\r\n            //     {/* </Container> */}\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductList);"]},"metadata":{},"sourceType":"module"}