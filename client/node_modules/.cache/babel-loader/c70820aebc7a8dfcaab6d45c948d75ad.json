{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom';\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { DataGrid } from '@material-ui/data-grid'; // import ReactTable from 'react-table'\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\n\nimport api from '../api'; // import styled from 'styled-components'\n// import styled from 'styled-components'\n// import { useTable } from 'react-table'\n\nimport { withRouter } from 'react-router-dom'; // import 'react-table/react-table.css'\n// const Wrapper = styled.div`\n//     padding: 0 40px 40px 40px;\n// `\n// const Update = styled.div`\n//     color: #ef9b0f;\n//     cursor: pointer;\n// `\n// const Delete = styled.div`\n//     color: #ff0000;\n//     cursor: pointer;\n// `\n// class UpdateProduct extends React.Component {\n//     updateUser = event => {\n//         event.preventDefault()\n//         window.location.href = `/products/update/${this.props.id}`\n//     }\n//     render() {\n//         return <Update onClick={this.updateUser}>Update</Update>\n//     }\n// }\n// class DeleteProduct extends React.Component {\n//     deleteUser = event => {\n//         event.preventDefault();\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\n//             api.deleteProductById(this.props.id);\n//             window.location.reload();\n//         }\n//     }\n//     render() {\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await api.getAllProducts().then(products => {\n        // console.log(products.data);\n        this.setState({\n          products: products.data // isLoading: false,\n\n        });\n      });\n    };\n\n    this.state = {\n      products: []\n    }; // this.remove = this.remove.bind(this);\n  }\n\n  render() {\n    let start = async () => {\n      let products = await api.getAllProducts(); // api.getAllProducts().then(products => {\n      //     console.log(products.data);\n      //     this.setState({\n      //         products: products.data,\n      //         // isLoading: false,\n      //     })\n      // })\n      // const { products } = this.state;\n\n      console.log('TCL: ProductList -> render -> products', products); // return products;\n      // let products = start();\n      // const columns = [\n      //     { id: 'name', label: 'Name', minWidth: 170 },\n      //     { id: 'type', label: 'Type', minWidth: 100 },\n      //     {\n      //         id: 'picture',\n      //         label: 'Picture',\n      //         minWidth: 170,\n      //         align: 'right',\n      //         format: (value) => value.toLocaleString('en-US'),\n      //     },\n      //     {\n      //         id: 'price',\n      //         label: 'Price',\n      //         minWidth: 170,\n      //         align: 'right',\n      //         format: (value) => value.toLocaleString('en-US'),\n      //     },\n      // ];\n\n      function createData(product) {\n        // const id = Math.random();\n        return [product.name, product.type, product.picture, product.price];\n      } // useEffect(() => {\n      //     var apiurl = \"http://localhost:4000/api/products\";\n      //     axios\n      //       .get(apiurl)\n      //       .then((response) => response.data)\n      //       .then((data) => {\n      //         setIsLoaded(true);\n      //         setRowData(data);\n      //       });\n      //   }, []);\n\n\n      let rows = [];\n      console.log(products.data.length);\n\n      for (let i = 0; i < products.data.length; i++) {\n        rows.push(createData(products.data[i]));\n      }\n\n      return rows;\n    };\n\n    const columns = [{\n      id: 'name',\n      label: 'Name',\n      minWidth: 170\n    }, {\n      id: 'type',\n      label: 'Type',\n      minWidth: 100\n    }, {\n      id: 'picture',\n      label: 'Picture',\n      minWidth: 170,\n      align: 'right',\n      format: value => value.toLocaleString('en-US')\n    }, {\n      id: 'price',\n      label: 'Price',\n      minWidth: 170,\n      align: 'right',\n      format: value => value.toLocaleString('en-US')\n    }];\n    let rows = start(); // rows.push(products.data.map(product => { console.log(product); createData(product.name, product.type, product.picture, product.price) }))\n    // let showTable = true\n    // if (!products.length) {\n    //     showTable = false\n    // }\n    // function Table({ columns, data }) {\n    //     // Use the state and functions returned from useTable to build your UI\n    //     const {\n    //       getTableProps,\n    //       getTableBodyProps,\n    //       headerGroups,\n    //       rows,\n    //       prepareRow,\n    //     } = useTable({\n    //       columns,\n    //       data,\n    //     })\n    //     // Render the UI for your table\n    //     return (\n    //       <table {...getTableProps()}>\n    //         <thead>\n    //           {headerGroups.map(headerGroup => (\n    //             <tr {...headerGroup.getHeaderGroupProps()}>\n    //               {headerGroup.headers.map(column => (\n    //                 <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n    //               ))}\n    //             </tr>\n    //           ))}\n    //         </thead>\n    //         <tbody {...getTableBodyProps()}>\n    //           {rows.map((row, i) => {\n    //             prepareRow(row)\n    //             return (\n    //               <tr {...row.getRowProps()}>\n    //                 {row.cells.map(cell => {\n    //                   return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n    //                 })}\n    //               </tr>\n    //             )\n    //           })}\n    //         </tbody>\n    //       </table>\n    //     )\n    //   }\n    // return (\n    //     <div>\n    //         <Wrapper>\n    //             {showTable && (\n    //                 <Table\n    //                     data={products}\n    //                     columns={columns}\n    //                     // loading={isLoading}\n    //                     defaultPageSize={10}\n    //                     showPageSizeOptions={true}\n    //                     minRows={0}\n    //                 />\n    //             )}\n    //         </Wrapper>\n    //     </div>\n    // )\n    // const { products } = this.state;\n    // const productList = products.map(product => {\n    //     return <tr key={product.id}>\n    //         <td style={{ whiteSpace: 'nowrap' }}>{product.type}</td>\n    //         <td>{product.name}</td>\n    //         <td>{product.picture}</td>\n    //         <td>{product.price}</td>\n    //         <td>\n    //             <a href={`/products/ + ${product.id}`}>\n    //                 <button>Edit</button>\n    //             </a>\n    //             <button onClick={() => this.remove(product.id)}>Delete</button>\n    //             {/* <ButtonGroup> */}\n    //                 {/* <Button to={'/products/' + product.id}>Edit</Button> */}\n    //                 {/* <Button onClick={() => this.remove(product.id)}>Delete</Button> */}\n    //             {/* </ButtonGroup> */}\n    //         </td>\n    //     </tr>\n    // });\n    // const useStyles = makeStyles({\n    //     root: {\n    //         width: '100%',\n    //     },\n    //     container: {\n    //         maxHeight: 440,\n    //     },\n    // });\n    // const classes = useStyles();\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        id: Math.random(),\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this) // <div>\n    //     {/* <Container fluid> */}\n    //         <div>\n    //             <button tag={Link} to=\"/products/new\">Add Product</button>\n    //         </div>\n    //         <h3>Product List</h3>\n    //         <table>\n    //             <thead>\n    //                 <tr>\n    //                     <th width=\"25%\">type</th>\n    //                     <th width=\"25%\">name</th>\n    //                     <th width=\"25%\">picture</th>\n    //                     <th width=\"25%\">price</th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {productList}\n    //             </tbody>\n    //         </table>\n    //     {/* </Container> */}\n    // </div>\n    ;\n  }\n\n}\nexport default _c = withRouter(ProductList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","DataGrid","api","withRouter","ProductList","Component","constructor","props","componentDidMount","getAllProducts","then","products","setState","data","state","render","start","console","log","createData","product","name","type","picture","price","rows","length","i","push","columns","id","label","minWidth","align","format","value","toLocaleString","height","width","Math","random"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEqB,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAAZ;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAd;AAA6B,QAAA,IAAI,EAAEf,IAAnC;AAAyC,QAAA,OAAO,EAAEI,OAAlD;AAA2D,QAAA,QAAQ,EAAE,CAArE;AAAwE,QAAA,iBAAiB;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,CAII;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBJ;AA0BH;;AApN4C;AAuNjD,oBAAe1B,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n// import ReactTable from 'react-table'\r\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\r\nimport api from '../api'\r\n\r\n// import styled from 'styled-components'\r\n\r\n// import styled from 'styled-components'\r\n// import { useTable } from 'react-table'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import 'react-table/react-table.css'\r\n\r\n// const Wrapper = styled.div`\r\n//     padding: 0 40px 40px 40px;\r\n// `\r\n\r\n// const Update = styled.div`\r\n//     color: #ef9b0f;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// const Delete = styled.div`\r\n//     color: #ff0000;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// class UpdateProduct extends React.Component {\r\n//     updateUser = event => {\r\n//         event.preventDefault()\r\n\r\n//         window.location.href = `/products/update/${this.props.id}`\r\n//     }\r\n\r\n//     render() {\r\n//         return <Update onClick={this.updateUser}>Update</Update>\r\n//     }\r\n// }\r\n\r\n// class DeleteProduct extends React.Component {\r\n//     deleteUser = event => {\r\n//         event.preventDefault();\r\n//         if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\r\n//             api.deleteProductById(this.props.id);\r\n//             window.location.reload();\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n//     }\r\n// }\r\n\r\nexport class ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { products: [] };\r\n        // this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await api.getAllProducts().then(products => {\r\n            // console.log(products.data);\r\n            this.setState({\r\n                products: products.data,\r\n                // isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let start = async () => {\r\n            let products = await api.getAllProducts();\r\n            // api.getAllProducts().then(products => {\r\n            //     console.log(products.data);\r\n            //     this.setState({\r\n            //         products: products.data,\r\n            //         // isLoading: false,\r\n            //     })\r\n            // })\r\n            // const { products } = this.state;\r\n            console.log('TCL: ProductList -> render -> products', products);\r\n            // return products;\r\n            // let products = start();\r\n            // const columns = [\r\n            //     { id: 'name', label: 'Name', minWidth: 170 },\r\n            //     { id: 'type', label: 'Type', minWidth: 100 },\r\n            //     {\r\n            //         id: 'picture',\r\n            //         label: 'Picture',\r\n            //         minWidth: 170,\r\n            //         align: 'right',\r\n            //         format: (value) => value.toLocaleString('en-US'),\r\n            //     },\r\n            //     {\r\n            //         id: 'price',\r\n            //         label: 'Price',\r\n            //         minWidth: 170,\r\n            //         align: 'right',\r\n            //         format: (value) => value.toLocaleString('en-US'),\r\n            //     },\r\n            // ];\r\n            function createData(product) {\r\n                // const id = Math.random();\r\n                return [product.name, product.type, product.picture, product.price];\r\n            }\r\n            // useEffect(() => {\r\n            //     var apiurl = \"http://localhost:4000/api/products\";\r\n            //     axios\r\n            //       .get(apiurl)\r\n            //       .then((response) => response.data)\r\n            //       .then((data) => {\r\n            //         setIsLoaded(true);\r\n            //         setRowData(data);\r\n            //       });\r\n            //   }, []);\r\n            let rows = [\r\n\r\n            ];\r\n            console.log(products.data.length);\r\n            for (let i = 0; i < products.data.length; i++) {\r\n                rows.push(createData(products.data[i]));\r\n            }\r\n            return rows;\r\n        }\r\n        const columns = [\r\n            { id: 'name', label: 'Name', minWidth: 170 },\r\n            { id: 'type', label: 'Type', minWidth: 100 },\r\n            {\r\n                id: 'picture',\r\n                label: 'Picture',\r\n                minWidth: 170,\r\n                align: 'right',\r\n                format: (value) => value.toLocaleString('en-US'),\r\n            },\r\n            {\r\n                id: 'price',\r\n                label: 'Price',\r\n                minWidth: 170,\r\n                align: 'right',\r\n                format: (value) => value.toLocaleString('en-US'),\r\n            },\r\n        ];\r\n        let rows = start();\r\n        // rows.push(products.data.map(product => { console.log(product); createData(product.name, product.type, product.picture, product.price) }))\r\n\r\n        // let showTable = true\r\n        // if (!products.length) {\r\n        //     showTable = false\r\n        // }\r\n\r\n\r\n        // function Table({ columns, data }) {\r\n        //     // Use the state and functions returned from useTable to build your UI\r\n        //     const {\r\n        //       getTableProps,\r\n        //       getTableBodyProps,\r\n        //       headerGroups,\r\n        //       rows,\r\n        //       prepareRow,\r\n        //     } = useTable({\r\n        //       columns,\r\n        //       data,\r\n        //     })\r\n\r\n        //     // Render the UI for your table\r\n        //     return (\r\n        //       <table {...getTableProps()}>\r\n        //         <thead>\r\n        //           {headerGroups.map(headerGroup => (\r\n        //             <tr {...headerGroup.getHeaderGroupProps()}>\r\n        //               {headerGroup.headers.map(column => (\r\n        //                 <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n        //               ))}\r\n        //             </tr>\r\n        //           ))}\r\n        //         </thead>\r\n        //         <tbody {...getTableBodyProps()}>\r\n        //           {rows.map((row, i) => {\r\n        //             prepareRow(row)\r\n        //             return (\r\n        //               <tr {...row.getRowProps()}>\r\n        //                 {row.cells.map(cell => {\r\n        //                   return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n        //                 })}\r\n        //               </tr>\r\n        //             )\r\n        //           })}\r\n        //         </tbody>\r\n        //       </table>\r\n        //     )\r\n        //   }\r\n\r\n        // return (\r\n        //     <div>\r\n        //         <Wrapper>\r\n        //             {showTable && (\r\n        //                 <Table\r\n        //                     data={products}\r\n        //                     columns={columns}\r\n        //                     // loading={isLoading}\r\n        //                     defaultPageSize={10}\r\n        //                     showPageSizeOptions={true}\r\n        //                     minRows={0}\r\n        //                 />\r\n        //             )}\r\n        //         </Wrapper>\r\n        //     </div>\r\n        // )\r\n\r\n        // const { products } = this.state;\r\n        // const productList = products.map(product => {\r\n        //     return <tr key={product.id}>\r\n        //         <td style={{ whiteSpace: 'nowrap' }}>{product.type}</td>\r\n        //         <td>{product.name}</td>\r\n        //         <td>{product.picture}</td>\r\n        //         <td>{product.price}</td>\r\n        //         <td>\r\n        //             <a href={`/products/ + ${product.id}`}>\r\n        //                 <button>Edit</button>\r\n        //             </a>\r\n        //             <button onClick={() => this.remove(product.id)}>Delete</button>\r\n        //             {/* <ButtonGroup> */}\r\n        //                 {/* <Button to={'/products/' + product.id}>Edit</Button> */}\r\n        //                 {/* <Button onClick={() => this.remove(product.id)}>Delete</Button> */}\r\n        //             {/* </ButtonGroup> */}\r\n        //         </td>\r\n        //     </tr>\r\n        // });\r\n        // const useStyles = makeStyles({\r\n        //     root: {\r\n        //         width: '100%',\r\n        //     },\r\n        //     container: {\r\n        //         maxHeight: 440,\r\n        //     },\r\n        // });\r\n        // const classes = useStyles();\r\n        return (\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid id={Math.random()} rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n            </div>\r\n            // <div>\r\n            //     {/* <Container fluid> */}\r\n            //         <div>\r\n            //             <button tag={Link} to=\"/products/new\">Add Product</button>\r\n            //         </div>\r\n            //         <h3>Product List</h3>\r\n            //         <table>\r\n            //             <thead>\r\n            //                 <tr>\r\n            //                     <th width=\"25%\">type</th>\r\n            //                     <th width=\"25%\">name</th>\r\n            //                     <th width=\"25%\">picture</th>\r\n            //                     <th width=\"25%\">price</th>\r\n            //                 </tr>\r\n            //             </thead>\r\n            //             <tbody>\r\n            //                 {productList}\r\n            //             </tbody>\r\n            //         </table>\r\n            //     {/* </Container> */}\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductList);"]},"metadata":{},"sourceType":"module"}