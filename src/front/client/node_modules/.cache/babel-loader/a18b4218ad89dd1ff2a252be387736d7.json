{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\order.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport api from '../api';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, FormControl, Input, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport $ from 'jquery'; // window.$ = $;\n// window.jQuery = jQuery;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  name: \"\",\n  surname: \"\",\n  email: \"\",\n  city: \"\",\n  shipping: \"\",\n  socType: \"\",\n  socValue: \"\",\n  paid: false,\n  sent: false,\n  products: \"\",\n  price: \"\"\n};\nexport function Order() {\n  _s();\n\n  const [formValues, setFormValues] = useState(defaultValues);\n  const [items, setItems] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [shippingAddress, setShippingAddress] = useState();\n  let addresses = [\"1\", 2];\n\n  async function loadMap() {\n    $(function () {\n      var settings = {\n        \"async\": true,\n        \"crossDomain\": true,\n        \"url\": \"https://api.novaposhta.ua/v2.0/json/\",\n        \"method\": \"POST\",\n        \"headers\": {\n          \"content-type\": \"application/json\"\n        },\n        \"processData\": false,\n        \"data\": \"{\\r\\n\\\"257efb66873e2c130a5ae6af8bce89a6\\\": \\\"\\\",\\r\\n \\\"modelName\\\": \\\"AddressGeneral\\\",\\r\\n \\\"calledMethod\\\": \\\"getWarehouses\\\",\\r\\n \\\"methodProperties\\\": {\\r\\n \\\"Language\\\": \\\"ru\\\",\\r\\n \\\"Limit\\\": 5\\r\\n}\\r\\n}\" // \"data\": \"{\\r\\n\\\"257efb66873e2c130a5ae6af8bce89a6\\\": \\\"\\\",\\r\\n \\\"modelName\\\": \\\"AddressGeneral\\\",\\r\\n \\\"calledMethod\\\": \\\"getWarehouses\\\",\\r\\n \\\"methodProperties\\\": {\\r\\n \\\"CityName\\\": \\\"васильевка\\\",\\r\\n \\\"Limit\\\": 5\\r\\n }\\r\\n}\"\n\n      };\n      $.ajax(settings).done(function (response) {\n        console.log(response);\n        addresses = response.data;\n      });\n    });\n  }\n\n  async function loadCart() {\n    if (localStorage.getItem('podarok-print-en')) {\n      let cartList = [];\n      let stored = JSON.parse(localStorage.getItem('podarok-print-en'));\n      let pr = 0;\n\n      for (let i = 0; i < stored.cart.cartItems.length; i++) {\n        cartList.push(stored.cart.cartItems[i]); //   console.log(cartList[i]);\n      }\n\n      for (let t = 0; t < cartList.length; t++) {\n        //   console.log(cartList[t].price, cartList[t].quantity, price, cartList[t]);\n        //   console.log(cartList);\n        pr += cartList[t].price * cartList[t].quantity; //   setFormValues({ ...formValues, products: cartList[t]})\n        // setItems(...items, cartList[t]);\n        //   console.log(cartList[t]);\n      }\n\n      setPrice(pr);\n      setItems(cartList);\n      console.log(items);\n\n      for (let j = 0; j < items.length; j++) {\n        setFormValues({ ...formValues,\n          products: items[j]._id\n        });\n      } // setFormValues({ ...formValues, price: pr });\n\n    }\n\n    console.log(formValues);\n    await loadMap(); // const stored = JSON.parse(localStorage.getItem('podarok-print-en'));\n    // console.log(stored);\n    // setFormValues(stored.cartItems)\n  }\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value,\n      price: price,\n      products: items\n    }); // setFormValues({...formValues, price: price, products: items});\n  };\n\n  const handleSubmit = async event => {\n    // setFormValues({...formValues, price: price, products: items});\n    event.preventDefault();\n    console.log(formValues);\n    await api.insertOrder(formValues).then(localStorage.removeItem('podarok-print-en'));\n  };\n\n  const handleChange = event => {\n    setShippingAddress(event.target.value);\n  };\n\n  useEffect(() => {\n    loadCart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'whitesmoke'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      method: \"POST\",\n      children: [items.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"contentBlock\",\n        style: {\n          margin: 'auto',\n          width: '500px',\n          backgroundColor: 'whitesmoke'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"paper\",\n          style: {\n            display: \"flex\",\n            backgroundColor: 'whitesmoke'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/imgs/' + item.picture + '.jpg',\n              alt: item.name + ' picture',\n              className: \"picture\",\n              style: {\n                width: '100px',\n                height: '100px',\n                margin: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"productName\",\n            style: {\n              margin: 'auto'\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              margin: 'auto'\n            },\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"productPrice\",\n            style: {\n              margin: 'auto'\n            },\n            children: '₴' + item.price * item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"center\",\n        direction: \"column\",\n        style: {\n          backgroundColor: 'whitesmoke'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"name-input\",\n            name: \"name\",\n            label: \"\\u0418\\u043C\\u044F\",\n            type: \"text\",\n            value: formValues.name,\n            onChange: handleInputChange,\n            required: true,\n            fullWidth: true,\n            style: {\n              width: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"surname-input\",\n            name: \"surname\",\n            label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n            type: \"text\",\n            value: formValues.surname,\n            onChange: handleInputChange,\n            required: true,\n            style: {\n              width: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"city-input\",\n            name: \"city\",\n            label: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n            type: \"text\",\n            value: formValues.city,\n            onChange: handleInputChange,\n            required: true,\n            style: {\n              width: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: formValues.city ? /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: '300px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"age-native-simple\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              native: true,\n              value: shippingAddress,\n              onChange: handleChange,\n              inputProps: {\n                name: 'age',\n                id: 'age-native-simple'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                \"aria-label\": \"None\",\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), addresses.map(address => {\n                /*#__PURE__*/\n                _jsxDEV(\"option\", {\n                  value: address,\n                  children: address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this) // <FormControl style={{width: '300px'}}>\n          //     <InputLabel id=\"demo-mutiple-name-label\">Отделение НП</InputLabel>\n          //     <Select\n          //         labelId=\"demo-mutiple-name-label\"\n          //         id=\"demo-mutiple-name\"\n          //         multiple\n          //         value={addresses}\n          //         onChange={handleChange}\n          //         input={<Input />}\n          //     >\n          //         {addresses.map((address) => (\n          //             <MenuItem key={address} value={address}>\n          //                 {address}\n          //             </MenuItem>\n          //         ))}\n          //     </Select>\n          // </FormControl>\n          : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email-input\",\n            name: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            value: formValues.email,\n            onChange: handleInputChange,\n            required: true,\n            style: {\n              width: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"price-input\",\n            name: \"price\",\n            type: \"number\",\n            hidden: true,\n            value: formValues.price // onChange={handleInputChange}\n            ,\n            required: true,\n            disabled: true,\n            style: {\n              width: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"products-input\",\n            name: \"products\",\n            type: \"text\",\n            hidden: true,\n            value: formValues.products // onChange={handleInputChange}\n            ,\n            required: true,\n            disabled: true,\n            style: {\n              width: '300px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            style: {\n              width: '300px',\n              backgroundColor: 'green',\n              margin: '10px 0'\n            },\n            color: \"primary\",\n            children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Order, \"pblYo2fGzYYs26/NZSalvaejjs4=\");\n\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/order.js"],"names":["React","useState","useEffect","api","Grid","Paper","Button","FormControl","Input","InputLabel","Select","MenuItem","TextField","$","defaultValues","name","surname","email","city","shipping","socType","socValue","paid","sent","products","price","Order","formValues","setFormValues","items","setItems","setPrice","shippingAddress","setShippingAddress","addresses","loadMap","settings","ajax","done","response","console","log","data","loadCart","localStorage","getItem","cartList","stored","JSON","parse","pr","i","cart","cartItems","length","push","t","quantity","j","_id","handleInputChange","e","value","target","handleSubmit","event","preventDefault","insertOrder","then","removeItem","handleChange","backgroundColor","map","item","margin","width","display","picture","height","id","address"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport api from '../api';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, FormControl, Input, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from 'jquery';\r\n\r\n// window.$ = $;\r\n// window.jQuery = jQuery;\r\n\r\nconst defaultValues = {\r\n    name: \"\",\r\n    surname: \"\",\r\n    email: \"\",\r\n    city: \"\",\r\n    shipping: \"\",\r\n    socType: \"\",\r\n    socValue: \"\",\r\n    paid: false,\r\n    sent: false,\r\n    products: \"\",\r\n    price: \"\",\r\n};\r\n\r\nexport function Order() {\r\n    const [formValues, setFormValues] = useState(defaultValues);\r\n    const [items, setItems] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [shippingAddress, setShippingAddress] = useState();\r\n\r\n    let addresses = [\"1\", 2];\r\n\r\n    async function loadMap() {\r\n        $(function () {\r\n            var settings = {\r\n                \"async\": true,\r\n                \"crossDomain\": true,\r\n                \"url\": \"https://api.novaposhta.ua/v2.0/json/\",\r\n                \"method\": \"POST\",\r\n                \"headers\": {\r\n                    \"content-type\": \"application/json\",\r\n\r\n                },\r\n                \"processData\": false,\r\n                \"data\": \"{\\r\\n\\\"257efb66873e2c130a5ae6af8bce89a6\\\": \\\"\\\",\\r\\n \\\"modelName\\\": \\\"AddressGeneral\\\",\\r\\n \\\"calledMethod\\\": \\\"getWarehouses\\\",\\r\\n \\\"methodProperties\\\": {\\r\\n \\\"Language\\\": \\\"ru\\\",\\r\\n \\\"Limit\\\": 5\\r\\n}\\r\\n}\"\r\n                // \"data\": \"{\\r\\n\\\"257efb66873e2c130a5ae6af8bce89a6\\\": \\\"\\\",\\r\\n \\\"modelName\\\": \\\"AddressGeneral\\\",\\r\\n \\\"calledMethod\\\": \\\"getWarehouses\\\",\\r\\n \\\"methodProperties\\\": {\\r\\n \\\"CityName\\\": \\\"васильевка\\\",\\r\\n \\\"Limit\\\": 5\\r\\n }\\r\\n}\"\r\n            }\r\n\r\n            $.ajax(settings).done(function (response) {\r\n                console.log(response);\r\n                addresses = response.data;\r\n            });\r\n        });\r\n    }\r\n\r\n    async function loadCart() {\r\n        if (localStorage.getItem('podarok-print-en')) {\r\n            let cartList = [];\r\n            let stored = JSON.parse(localStorage.getItem('podarok-print-en'));\r\n            let pr = 0;\r\n            for (let i = 0; i < stored.cart.cartItems.length; i++) {\r\n                cartList.push(stored.cart.cartItems[i]);\r\n                //   console.log(cartList[i]);\r\n            }\r\n            for (let t = 0; t < cartList.length; t++) {\r\n                //   console.log(cartList[t].price, cartList[t].quantity, price, cartList[t]);\r\n                //   console.log(cartList);\r\n                pr += cartList[t].price * cartList[t].quantity;\r\n                //   setFormValues({ ...formValues, products: cartList[t]})\r\n                // setItems(...items, cartList[t]);\r\n                //   console.log(cartList[t]);\r\n            }\r\n            setPrice(pr);\r\n            setItems(cartList);\r\n            console.log(items)\r\n            for (let j = 0; j < items.length; j++) {\r\n                setFormValues({ ...formValues, products: items[j]._id })\r\n            }\r\n            // setFormValues({ ...formValues, price: pr });\r\n        }\r\n        console.log(formValues)\r\n        await loadMap();\r\n        // const stored = JSON.parse(localStorage.getItem('podarok-print-en'));\r\n        // console.log(stored);\r\n        // setFormValues(stored.cartItems)\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n            price: price,\r\n            products: items,\r\n        });\r\n        // setFormValues({...formValues, price: price, products: items});\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        // setFormValues({...formValues, price: price, products: items});\r\n        event.preventDefault();\r\n        console.log(formValues);\r\n        await api.insertOrder(formValues).then(\r\n            localStorage.removeItem('podarok-print-en')\r\n        );\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setShippingAddress(event.target.value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadCart();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'whitesmoke' }}>\r\n            <form onSubmit={handleSubmit} method=\"POST\">\r\n                {items.map((item) => (\r\n                    <Grid item className='contentBlock' style={{ margin: 'auto', width: '500px', backgroundColor: 'whitesmoke' }}>\r\n                        <Paper className=\"paper\" style={{ display: \"flex\", backgroundColor: 'whitesmoke' }}>\r\n                            <li><img src={'/imgs/' + item.picture + '.jpg'} alt={item.name + ' picture'} className=\"picture\" style={{ width: '100px', height: '100px', margin: 'auto' }} /></li>\r\n                            <li className=\"productName\" style={{ margin: 'auto' }}>{item.name}</li>\r\n                            <li style={{ margin: 'auto' }}>{/*<Button onClick={() => { HandleRemoveQuantity(item) }}>-</Button>*/}{item.quantity}{/*<Button onClick={() => { HandleAddQuantity(item) }}>+</Button>*/}</li>\r\n                            <li className=\"productPrice\" style={{ margin: 'auto' }}>{'₴' + item.price * item.quantity}</li>\r\n                            {/* <li style={{ margin: 'auto' }}><Button onClick={() => { HandleRemoveItem(item) }}>X</Button></li> */}\r\n                        </Paper>\r\n                    </Grid>\r\n                ))}\r\n                <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\" style={{ backgroundColor: 'whitesmoke' }}>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"name-input\"\r\n                            name=\"name\"\r\n                            label=\"Имя\"\r\n                            type=\"text\"\r\n                            value={formValues.name}\r\n                            onChange={handleInputChange}\r\n                            required={true}\r\n                            fullWidth={true}\r\n                            style={{ width: '300px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"surname-input\"\r\n                            name=\"surname\"\r\n                            label=\"Фамилия\"\r\n                            type=\"text\"\r\n                            value={formValues.surname}\r\n                            onChange={handleInputChange}\r\n                            required={true}\r\n                            style={{ width: '300px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"city-input\"\r\n                            name=\"city\"\r\n                            label=\"Город\"\r\n                            type=\"text\"\r\n                            value={formValues.city}\r\n                            onChange={handleInputChange}\r\n                            required={true}\r\n                            style={{ width: '300px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>{formValues.city ?\r\n                        <FormControl style={{width: '300px'}}>\r\n                            <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\r\n                            <Select\r\n                                native\r\n                                value={shippingAddress}\r\n                                onChange={handleChange}\r\n                                inputProps={{\r\n                                    name: 'age',\r\n                                    id: 'age-native-simple',\r\n                                }}\r\n                            >\r\n                                <option aria-label=\"None\" value=\"\" />\r\n                                {addresses.map((address) => {\r\n                                    <option value={address}>{address}</option>\r\n                                })}\r\n                                {/* <option value={10}>Ten</option>\r\n                                <option value={20}>Twenty</option>\r\n                                <option value={30}>Thirty</option> */}\r\n                            </Select>\r\n                        </FormControl>\r\n                        // <FormControl style={{width: '300px'}}>\r\n                        //     <InputLabel id=\"demo-mutiple-name-label\">Отделение НП</InputLabel>\r\n                        //     <Select\r\n                        //         labelId=\"demo-mutiple-name-label\"\r\n                        //         id=\"demo-mutiple-name\"\r\n                        //         multiple\r\n                        //         value={addresses}\r\n                        //         onChange={handleChange}\r\n                        //         input={<Input />}\r\n                        //     >\r\n                        //         {addresses.map((address) => (\r\n                        //             <MenuItem key={address} value={address}>\r\n                        //                 {address}\r\n                        //             </MenuItem>\r\n                        //         ))}\r\n                        //     </Select>\r\n                        // </FormControl>\r\n                        : null}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"email-input\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            value={formValues.email}\r\n                            onChange={handleInputChange}\r\n                            required={true}\r\n                            style={{ width: '300px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"price-input\"\r\n                            name=\"price\"\r\n                            type=\"number\"\r\n                            hidden={true}\r\n                            value={formValues.price}\r\n                            // onChange={handleInputChange}\r\n                            required={true}\r\n                            disabled={true}\r\n                            style={{ width: '300px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField\r\n                            id=\"products-input\"\r\n                            name=\"products\"\r\n                            type=\"text\"\r\n                            hidden={true}\r\n                            value={formValues.products}\r\n                            // onChange={handleInputChange}\r\n                            required={true}\r\n                            disabled={true}\r\n                            style={{ width: '300px' }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" style={{ width: '300px', backgroundColor: 'green', margin: '10px 0' }} color=\"primary\">Оформить</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}