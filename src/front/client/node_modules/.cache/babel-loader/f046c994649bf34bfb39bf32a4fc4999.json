{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\components\\\\dialog.form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // import FolderIcon from '@material-ui/icons/Folder';\n// import DeleteIcon from '@material-ui/icons/Delete';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialog() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [items, setItems] = useState([]);\n  const [city, setCity] = useState(false);\n\n  const loadCart = () => {\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      items.push(localStorage.getItem(key)); // alert(`${key}: ${localStorage.getItem(key)}`);\n    }\n\n    console.log(items);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    loadCart();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Open form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: city,\n              onChange: event => setCity(event.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this),\n            label: \"\\u0414\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0430 \\u0432 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u042D\\u043D\\u0435\\u0440\\u0433\\u043E\\u0434\\u0430\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormDialog, \"PpXbaBlChvhVxhazEUhTOW/2Li0=\");\n\n_c = FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/components/dialog.form.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","List","ListItem","ListItemAvatar","ListItemIcon","ListItemSecondaryAction","ListItemText","Avatar","IconButton","FormGroup","FormControlLabel","Checkbox","Grid","Typography","FormDialog","open","setOpen","items","setItems","city","setCity","loadCart","i","localStorage","length","key","push","getItem","console","log","handleClickOpen","handleClose","event","target","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import FolderIcon from '@material-ui/icons/Folder';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const [city, setCity] = useState(false);\r\n\r\n  const loadCart = () => {\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let key = localStorage.key(i);\r\n      items.push(localStorage.getItem(key));\r\n      // alert(`${key}: ${localStorage.getItem(key)}`);\r\n    }\r\n    console.log(items);\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    loadCart();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {/* <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h6\">\r\n            Avatar with text and icon\r\n          </Typography>\r\n          <div>\r\n            <List>\r\n              \r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </List>\r\n          </div>\r\n        </Grid> */}\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <FormGroup row>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox checked={city} onChange={(event) => setCity(event.target.checked)} />\r\n              }\r\n              label=\"Доставка в город Энергодар\"\r\n            />\r\n          </FormGroup>\r\n          {/* <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          /> */}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}