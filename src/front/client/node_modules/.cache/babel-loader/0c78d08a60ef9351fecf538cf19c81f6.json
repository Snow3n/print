{"ast":null,"code":"var _jsxFileName = \"E:\\\\proj\\\\Landing_sis\\\\src\\\\front\\\\client\\\\src\\\\pages\\\\productList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { Link } from 'react-router-dom';\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n\nimport { DataGrid } from '@material-ui/data-grid'; // import ReactTable from 'react-table'\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\n\nimport api from '../api'; // import styled from 'styled-components'\n\nimport styled from 'styled-components'; // import { useTable } from 'react-table'\n\nimport { withRouter } from 'react-router-dom'; // import 'react-table/react-table.css'\n// const Wrapper = styled.div`\n//     padding: 0 40px 40px 40px;\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\n_c = Update;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n_c2 = Delete;\n\nclass UpdateProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/products/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Update, {\n      onClick: this.updateUser,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass DeleteProduct extends React.Component {\n  constructor(props) {\n    super(props); // this.selection = [];\n    // this.selection = props.selection;\n\n    this.deleteUser = event => {\n      event.preventDefault();\n      console.log(this.props.selection.selectionModel);\n\n      if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\n        this.props.selection.selectionModel.map(element => api.deleteProductById(element)); // api.deleteProductById(this.selection.selectionModel);\n\n        window.location.reload();\n      }\n    };\n\n    console.log('DELETE ' + this.selection);\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Delete, {\n      onClick: this.deleteUser,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default function ProductList() {\n  _s();\n\n  // constructor(props) {\n  // super(props);\n  // this.state = { products: [], selection: [] };\n  // this.load = this.load.bind(this);\n  // this.columns = [];\n  // this.rows = [];\n  // this.selection = [];\n  // this.returnSelection = this.returnSelection.bind(this);\n  // }\n  // componentDidMount = async () => {\n  //     await api.getAllProducts().then(products => {\n  //         this.setState({\n  //             products: products.data,\n  //         })\n  //         this.load();\n  //     })\n  // }\n  const [select, setSelection] = useState([]);\n  const [products, setProducts] = useState([]); // componentDidUpdate = async (prevProps, prevState) => {\n  //     // await api.getAllProducts().then(products => {\n  //     //     this.setState({\n  //     //         products: products.data,\n  //     //     })\n  //     //     // this.load();\n  //     // })\n  //     console.log(prevState);\n  //     if (this.state.products !== prevState.products) {\n  //         // this.load();\n  //         await api.getAllProducts().then(products => {\n  //             this.setState({\n  //                 products: products.data,\n  //             })\n  //             this.load();\n  //         })\n  //     }\n  // }\n\n  let load = async () => {\n    await api.getAllProducts().then(product => {\n      setProducts(product.data);\n    });\n    const {\n      products\n    } = this.state;\n\n    try {\n      console.log('TCL: ProductList -> render -> products', products);\n\n      for (let i = 0; i < products.length; i++) {\n        this.rows.push({\n          id: products[i]._id,\n          type: products[i].type,\n          name: products[i].name,\n          picture: products[i].picture,\n          price: products[i].price\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    let rows = [];\n    const columns = [{\n      field: 'type',\n      headerName: 'type',\n      width: 150\n    }, {\n      field: 'name',\n      headerName: 'name',\n      width: 150\n    }, {\n      field: 'picture',\n      headerName: 'picture',\n      width: 150\n    }, {\n      field: 'price',\n      headerName: 'price',\n      width: 150\n    }];\n    this.columns = columns;\n    this.rows = rows;\n  }; // async returnSelection(newSelection) {\n  //     this.setState({ selection: newSelection });\n  // }\n\n\n  load();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      id: this.rows._id,\n      rows: this.rows,\n      columns: this.columns,\n      pageSize: 10,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setSelection(newSelection.rows);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateProduct, {\n      selection: this.selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteProduct, {\n      selection: this.selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n} // export default withRouter(ProductList);\n\n_s(ProductList, \"2czyJ/wSTJ8nYEAmZCddjZ/78z4=\");\n\n_c3 = ProductList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Update\");\n$RefreshReg$(_c2, \"Delete\");\n$RefreshReg$(_c3, \"ProductList\");","map":{"version":3,"sources":["E:/proj/Landing_sis/src/front/client/src/pages/productList.js"],"names":["React","useState","DataGrid","api","styled","withRouter","Update","div","Delete","UpdateProduct","Component","updateUser","event","preventDefault","window","location","href","props","id","render","DeleteProduct","constructor","deleteUser","console","log","selection","selectionModel","confirm","map","element","deleteProductById","reload","ProductList","select","setSelection","products","setProducts","load","getAllProducts","then","product","data","state","i","length","rows","push","_id","type","name","picture","price","error","columns","field","headerName","width","height","newSelection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;;AACA,SAASC,QAAT,QAAyB,wBAAzB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AAEA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AAEA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA,CAHA;KAAMD,M;AAKN,MAAME,MAAM,GAAGJ,MAAM,CAACG,GAAI;AAC1B;AACA;AACA,CAHA;MAAMC,M;;AAKN,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SACxCC,UADwC,GAC3BC,KAAK,IAAI;AAClBA,MAAAA,KAAK,CAACC,cAAN;AAEAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,oBAAmB,KAAKC,KAAL,CAAWC,EAAG,EAAzD;AACH,KALuC;AAAA;;AAOxCC,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKR,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AATuC;;AAY5C,MAAMS,aAAN,SAA4BpB,KAAK,CAACU,SAAlC,CAA4C;AACxCW,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;;AAHe,SAOnBK,UAPmB,GAONV,KAAK,IAAI;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,SAAX,CAAqBC,cAAjC;;AACA,UAAIZ,MAAM,CAACa,OAAP,CAAgB,qCAAoC,KAAKV,KAAL,CAAWC,EAAG,cAAlE,CAAJ,EAAsF;AAClF,aAAKD,KAAL,CAAWQ,SAAX,CAAqBC,cAArB,CAAoCE,GAApC,CAAwCC,OAAO,IAAK1B,GAAG,CAAC2B,iBAAJ,CAAsBD,OAAtB,CAApD,EADkF,CAElF;;AACAf,QAAAA,MAAM,CAACC,QAAP,CAAgBgB,MAAhB;AACH;AACJ,KAfkB;;AAIfR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKC,SAA7B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACH;;AAUDE,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAnBuC;;AAsB5C,eAAe,SAASU,WAAT,GAAuB;AAAA;;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBjC,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,EAAD,CAAxC,CAvBkC,CAyBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIoC,IAAI,GAAG,YAAY;AACnB,UAAMlC,GAAG,CAACmC,cAAJ,GAAqBC,IAArB,CAA0BC,OAAO,IAAI;AACvCJ,MAAAA,WAAW,CAACI,OAAO,CAACC,IAAT,CAAX;AACH,KAFK,CAAN;AAIA,UAAM;AAAEN,MAAAA;AAAF,QAAe,KAAKO,KAA1B;;AACA,QAAI;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDW,QAAtD;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,aAAKE,IAAL,CAAUC,IAAV,CAAe;AAAE5B,UAAAA,EAAE,EAAEiB,QAAQ,CAACQ,CAAD,CAAR,CAAYI,GAAlB;AAAuBC,UAAAA,IAAI,EAAEb,QAAQ,CAACQ,CAAD,CAAR,CAAYK,IAAzC;AAA+CC,UAAAA,IAAI,EAAEd,QAAQ,CAACQ,CAAD,CAAR,CAAYM,IAAjE;AAAuEC,UAAAA,OAAO,EAAEf,QAAQ,CAACQ,CAAD,CAAR,CAAYO,OAA5F;AAAqGC,UAAAA,KAAK,EAAEhB,QAAQ,CAACQ,CAAD,CAAR,CAAYQ;AAAxH,SAAf;AACH;AACJ,KALD,CAMA,OAAOC,KAAP,EAAc;AACV7B,MAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ;AACH;;AACD,QAAIP,IAAI,GAAG,EAAX;AAEA,UAAMQ,OAAO,GAAG,CACZ;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,UAAU,EAAE,MAA7B;AAAqCC,MAAAA,KAAK,EAAE;AAA5C,KADY,EAEZ;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,UAAU,EAAE,MAA7B;AAAqCC,MAAAA,KAAK,EAAE;AAA5C,KAFY,EAGZ;AAAEF,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,UAAU,EAAE,SAAhC;AAA2CC,MAAAA,KAAK,EAAE;AAAlD,KAHY,EAIZ;AAAEF,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE,OAA9B;AAAuCC,MAAAA,KAAK,EAAE;AAA9C,KAJY,CAAhB;AAMA,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKR,IAAL,GAAYA,IAAZ;AACH,GAzBD,CA5CkC,CAuElC;AACA;AACA;;;AACAR,EAAAA,IAAI;AACJ,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKX,IAAL,CAAUE,GAAxB;AAA6B,MAAA,IAAI,EAAE,KAAKF,IAAxC;AAA8C,MAAA,OAAO,EAAE,KAAKQ,OAA5D;AAAqE,MAAA,QAAQ,EAAE,EAA/E;AAAmF,MAAA,iBAAiB,MAApG;AACI,MAAA,sBAAsB,EAAGK,YAAD,IAAkB;AACtCxB,QAAAA,YAAY,CAACwB,YAAY,CAACb,IAAd,CAAZ;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKpB;AAA/B;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKA;AAA/B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,C,CAED;;GAvFwBO,W;;MAAAA,W","sourcesContent":["import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n// import ReactTable from 'react-table'\r\n// import { Button, ButtonGroup, Container, Table } from 'reactstrap'\r\nimport api from '../api'\r\n\r\n// import styled from 'styled-components'\r\n\r\nimport styled from 'styled-components'\r\n// import { useTable } from 'react-table'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import 'react-table/react-table.css'\r\n\r\n// const Wrapper = styled.div`\r\n//     padding: 0 40px 40px 40px;\r\n// `\r\n\r\nconst Update = styled.div`\r\n    color: #ef9b0f;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Delete = styled.div`\r\n    color: #ff0000;\r\n    cursor: pointer;\r\n`\r\n\r\nclass UpdateProduct extends React.Component {\r\n    updateUser = event => {\r\n        event.preventDefault()\r\n\r\n        window.location.href = `/products/update/${this.props.id}`\r\n    }\r\n\r\n    render() {\r\n        return <Update onClick={this.updateUser}>Update</Update>\r\n    }\r\n}\r\n\r\nclass DeleteProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.selection = [];\r\n        // this.selection = props.selection;\r\n        console.log('DELETE ' + this.selection);\r\n        console.log(this.props)\r\n    }\r\n    deleteUser = event => {\r\n        event.preventDefault();\r\n        console.log(this.props.selection.selectionModel);\r\n        if (window.confirm(`Do you want to delete the product ${this.props.id} permanently`)) {\r\n            this.props.selection.selectionModel.map(element => (api.deleteProductById(element)));\r\n            // api.deleteProductById(this.selection.selectionModel);\r\n            window.location.reload();\r\n        }\r\n    }\r\n    render() {\r\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\r\n    }\r\n}\r\n\r\nexport default function ProductList() {\r\n    // constructor(props) {\r\n    // super(props);\r\n    // this.state = { products: [], selection: [] };\r\n    // this.load = this.load.bind(this);\r\n    // this.columns = [];\r\n    // this.rows = [];\r\n    // this.selection = [];\r\n    // this.returnSelection = this.returnSelection.bind(this);\r\n\r\n    // }\r\n\r\n    // componentDidMount = async () => {\r\n    //     await api.getAllProducts().then(products => {\r\n    //         this.setState({\r\n    //             products: products.data,\r\n\r\n    //         })\r\n    //         this.load();\r\n    //     })\r\n    // }\r\n\r\n    const [select, setSelection] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    // componentDidUpdate = async (prevProps, prevState) => {\r\n    //     // await api.getAllProducts().then(products => {\r\n    //     //     this.setState({\r\n    //     //         products: products.data,\r\n    //     //     })\r\n    //     //     // this.load();\r\n    //     // })\r\n    //     console.log(prevState);\r\n    //     if (this.state.products !== prevState.products) {\r\n    //         // this.load();\r\n    //         await api.getAllProducts().then(products => {\r\n    //             this.setState({\r\n    //                 products: products.data,\r\n    //             })\r\n    //             this.load();\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    let load = async () => {\r\n        await api.getAllProducts().then(product => {\r\n            setProducts(product.data)\r\n        })\r\n\r\n        const { products } = this.state;\r\n        try {\r\n            console.log('TCL: ProductList -> render -> products', products);\r\n            for (let i = 0; i < products.length; i++) {\r\n                this.rows.push({ id: products[i]._id, type: products[i].type, name: products[i].name, picture: products[i].picture, price: products[i].price });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        let rows = [\r\n        ]\r\n        const columns = [\r\n            { field: 'type', headerName: 'type', width: 150 },\r\n            { field: 'name', headerName: 'name', width: 150 },\r\n            { field: 'picture', headerName: 'picture', width: 150 },\r\n            { field: 'price', headerName: 'price', width: 150 },\r\n        ];\r\n        this.columns = columns;\r\n        this.rows = rows;\r\n    }\r\n\r\n    // async returnSelection(newSelection) {\r\n    //     this.setState({ selection: newSelection });\r\n    // }\r\n    load();\r\n    return (\r\n        <div style={{ height: 700, width: '100%' }}>\r\n            <DataGrid id={this.rows._id} rows={this.rows} columns={this.columns} pageSize={10} checkboxSelection\r\n                onSelectionModelChange={(newSelection) => {\r\n                    setSelection(newSelection.rows);\r\n                }} />\r\n            <UpdateProduct selection={this.selection} />\r\n            <DeleteProduct selection={this.selection} />\r\n        </div >\r\n    );\r\n}\r\n\r\n// export default withRouter(ProductList);"]},"metadata":{},"sourceType":"module"}